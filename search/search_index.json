{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"another, self-built, home automation system \u00b6 Intention \u00b6 In the following I present my home automation solution. Originally I wanted to have a documentation for myself. In the meantime, the system has proven itself and maybe you want to replicate parts of it. Introduction \u00b6 My main focus was a robust, self-sufficient control system with which I could not depend on a proprietary system from a single manufacturer but could expand with hardware / software from different manufacturers. Here my choice fell on Simatic CPUs. The sensors and actuators are wired to these and they process the control program. Via the LAN interface, the CPUs communicate with the other home automation parts like: A NAS where the data logger server is running. Here various data are stored in a mySQL database for later evaluation. Several Raspberry Pi's are used for multimedia purpose and to run docker containers. As a central control system I use NodeRed which provides a webserver for operation (and a lot of help during development). Business view \u00b6 This picture shows the allocation of the components in 3 levels. Levels \u00b6 The end-user can control and observe the system with web services / web based applications. The process level devices are mainly housed in control cabinets and a server cabinet. The field level components are the sensors and actuators of the system with which the end user mainly interacts. Actuators \u00b6 Actuators include lights, blinds, sockets, heaters and other powered devices. Sensors \u00b6 Actively used sensors are mainly switches and buttons as in a traditional house installation. Additional sensors measure among other things: movement, temperature, humidity, brightness, noise, sunlight per direction, wind speed, rain, indoor air quality and any amount of data from the heating control system Disclaimer \u00b6 Hint Of course I am not liable for any damage caused by replicas ;-)","title":"Auto Home Stack"},{"location":"#another-self-built-home-automation-system","text":"","title":"another, self-built, home automation system"},{"location":"#intention","text":"In the following I present my home automation solution. Originally I wanted to have a documentation for myself. In the meantime, the system has proven itself and maybe you want to replicate parts of it.","title":"Intention"},{"location":"#introduction","text":"My main focus was a robust, self-sufficient control system with which I could not depend on a proprietary system from a single manufacturer but could expand with hardware / software from different manufacturers. Here my choice fell on Simatic CPUs. The sensors and actuators are wired to these and they process the control program. Via the LAN interface, the CPUs communicate with the other home automation parts like: A NAS where the data logger server is running. Here various data are stored in a mySQL database for later evaluation. Several Raspberry Pi's are used for multimedia purpose and to run docker containers. As a central control system I use NodeRed which provides a webserver for operation (and a lot of help during development).","title":"Introduction"},{"location":"#business-view","text":"This picture shows the allocation of the components in 3 levels.","title":"Business view"},{"location":"#levels","text":"The end-user can control and observe the system with web services / web based applications. The process level devices are mainly housed in control cabinets and a server cabinet. The field level components are the sensors and actuators of the system with which the end user mainly interacts.","title":"Levels"},{"location":"#actuators","text":"Actuators include lights, blinds, sockets, heaters and other powered devices.","title":"Actuators"},{"location":"#sensors","text":"Actively used sensors are mainly switches and buttons as in a traditional house installation. Additional sensors measure among other things: movement, temperature, humidity, brightness, noise, sunlight per direction, wind speed, rain, indoor air quality and any amount of data from the heating control system","title":"Sensors"},{"location":"#disclaimer","text":"Hint Of course I am not liable for any damage caused by replicas ;-)","title":"Disclaimer"},{"location":"about/imprint/","text":"Imprint \u00b6 Information according to \u00a7 5 TMG \u00b6 Alexander Kratzer Hintere Pfaffenleite 7 91358 Kunreuth Contact: Phone: 01601572825 E-mail: holzeimer@mail.de Disclaimer of liability \u00b6 Liability for contents \u00b6 The contents of our pages were created with the greatest care. However, we cannot assume any liability for the correctness, completeness and topicality of the contents. As a service provider, we are responsible for our own content on these pages according to \u00a7 7 para.1 TMG (German Telemedia Act) and general laws. According to \u00a7\u00a7 8 to 10 TMG, we are not obliged to monitor transmitted or stored external information or to investigate circumstances that indicate illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. However, liability in this respect is only possible from the time of knowledge of a concrete infringement. If we become aware of any such infringements, we will remove such content immediately. Liability for links \u00b6 Our offer contains links to external websites of third parties, on whose contents we have no influence. Therefore we cannot assume any liability for these external contents. The respective provider or operator of the sites is always responsible for the contents of the linked sites. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the contents of the linked pages is not reasonable without concrete evidence of a violation of the law. If we become aware of any infringements, we will remove such links immediately. Data protection \u00b6 The use of our website is usually possible without providing personal data. As far as personal data (e.g. name, address or e-mail addresses) is collected on our website, this is always done on a voluntary basis, as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (e.g. communication by e-mail) can have security gaps. A complete protection of data against access by third parties is not possible. The use of contact data published within the scope of the imprint obligation by third parties for sending advertising and information material not expressly requested is hereby expressly prohibited. The operators of the pages expressly reserve the right to take legal action in the event of the unsolicited sending of advertising information, for example through spam mails.","title":"Imprint"},{"location":"about/imprint/#imprint","text":"","title":"Imprint"},{"location":"about/imprint/#information-according-to-5-tmg","text":"Alexander Kratzer Hintere Pfaffenleite 7 91358 Kunreuth Contact: Phone: 01601572825 E-mail: holzeimer@mail.de","title":"Information according to \u00a7 5 TMG"},{"location":"about/imprint/#disclaimer-of-liability","text":"","title":"Disclaimer of liability"},{"location":"about/imprint/#liability-for-contents","text":"The contents of our pages were created with the greatest care. However, we cannot assume any liability for the correctness, completeness and topicality of the contents. As a service provider, we are responsible for our own content on these pages according to \u00a7 7 para.1 TMG (German Telemedia Act) and general laws. According to \u00a7\u00a7 8 to 10 TMG, we are not obliged to monitor transmitted or stored external information or to investigate circumstances that indicate illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. However, liability in this respect is only possible from the time of knowledge of a concrete infringement. If we become aware of any such infringements, we will remove such content immediately.","title":"Liability for contents"},{"location":"about/imprint/#liability-for-links","text":"Our offer contains links to external websites of third parties, on whose contents we have no influence. Therefore we cannot assume any liability for these external contents. The respective provider or operator of the sites is always responsible for the contents of the linked sites. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the contents of the linked pages is not reasonable without concrete evidence of a violation of the law. If we become aware of any infringements, we will remove such links immediately.","title":"Liability for links"},{"location":"about/imprint/#data-protection","text":"The use of our website is usually possible without providing personal data. As far as personal data (e.g. name, address or e-mail addresses) is collected on our website, this is always done on a voluntary basis, as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (e.g. communication by e-mail) can have security gaps. A complete protection of data against access by third parties is not possible. The use of contact data published within the scope of the imprint obligation by third parties for sending advertising and information material not expressly requested is hereby expressly prohibited. The operators of the pages expressly reserve the right to take legal action in the event of the unsolicited sending of advertising information, for example through spam mails.","title":"Data protection"},{"location":"about/references/","text":"Links / Downlads \u00b6 type info format link docu this documentation at AWS markdown autohomestack.de docu this documentation at github markdown alexkratzer.github.io/autohomestack/ repo this repository at github github.com/alexkratzer/autohomestack tool home automation pc-tool (outdated) dotNet github.com/alexkratzer/ahGUI tool pc - plc adapter dotNet github.com/alexkratzer/CpuPcStack config node-RED flows json github.com/ ... /node_red_flows","title":"References"},{"location":"about/references/#links-downlads","text":"type info format link docu this documentation at AWS markdown autohomestack.de docu this documentation at github markdown alexkratzer.github.io/autohomestack/ repo this repository at github github.com/alexkratzer/autohomestack tool home automation pc-tool (outdated) dotNet github.com/alexkratzer/ahGUI tool pc - plc adapter dotNet github.com/alexkratzer/CpuPcStack config node-RED flows json github.com/ ... /node_red_flows","title":"Links / Downlads"},{"location":"about/wiki/","text":"some useful hints \u00b6 documentation \u00b6 usage MkDocs \u00b6 mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. aws s3 sync ./site s3://autohomestack.de Deploy to s3 bucket mkdocs gh-deploy Deploy your documentation to GitHub Pages localhost:8000 to view it in browser https://autohomestack.github.io/website/ draw.io \u00b6 Open the XML (or create new one) with https://www.draw.io/ Make your changes Export the Image as PNG and get the XML source plantuml \u00b6 @ startuml ( * ) --> \"First Activity\" \"First Activity\" --> ( * ) @ enduml plantuml examples plantuml examples plantuml examples online editor open preview at VSC Ctrl + Shift + N -> to open a new window point to a different root folder Ctrl + Shift + V -> open markdown preview mode Alt + D -> to render plantuml git bash \u00b6 cmd task git checkout -b make new feature branch git checkout Pre_Master merge feature branch to Pre_Master git pull merge feature branch to Pre_Master git merge merge feature branch to Pre_Master git push --delete origin delete feature branch git branch -d delete feature branch","title":"My wiki"},{"location":"about/wiki/#some-useful-hints","text":"","title":"some useful hints"},{"location":"about/wiki/#documentation","text":"","title":"documentation"},{"location":"about/wiki/#usage-mkdocs","text":"mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. aws s3 sync ./site s3://autohomestack.de Deploy to s3 bucket mkdocs gh-deploy Deploy your documentation to GitHub Pages localhost:8000 to view it in browser https://autohomestack.github.io/website/","title":"usage MkDocs"},{"location":"about/wiki/#drawio","text":"Open the XML (or create new one) with https://www.draw.io/ Make your changes Export the Image as PNG and get the XML source","title":"draw.io"},{"location":"about/wiki/#plantuml","text":"@ startuml ( * ) --> \"First Activity\" \"First Activity\" --> ( * ) @ enduml plantuml examples plantuml examples plantuml examples online editor open preview at VSC Ctrl + Shift + N -> to open a new window point to a different root folder Ctrl + Shift + V -> open markdown preview mode Alt + D -> to render plantuml","title":"plantuml"},{"location":"about/wiki/#git-bash","text":"cmd task git checkout -b make new feature branch git checkout Pre_Master merge feature branch to Pre_Master git pull merge feature branch to Pre_Master git merge merge feature branch to Pre_Master git push --delete origin delete feature branch git branch -d delete feature branch","title":"git bash"},{"location":"home/components/","text":"Components \u00b6 here another view with focus on interface protocolls","title":"Components"},{"location":"home/components/#components","text":"here another view with focus on interface protocolls","title":"Components"},{"location":"home/requirements/","text":"Requirements to the system \u00b6 Most important \u00b6 Hint In order to gain acceptance among stakeholders, it is absolutely necessary to guarantee the basic functions that are also available with a conventional installation. This means that if the control level or process level devices fail, the following basic functions are retained: Switching the light on / off with conventional switches It must be possible to raise and lower the blinds by pressing buttons Sockets must be switched on moderately by default The heater must maintain the last specified temperature. Some more \u00b6 type description robustnes When the system is switched on (e.g. after a power failure) the system itself should start up and be active robustnes Services / applications on servers should be monitored automatically and restarted if necessary robustnes Backups of databases and other artifacts should be created automatically robustnes Basic functions like switching light on/off must work even if the control level or parts of the process level fail interoperability The different components of the system shall provide apis to exchange information and communicate with internal and external applications and systems. interoperability The system shall be open to different transport protocols and publishing / describing interfaces. interoperability For integrating iot devices the system shall provide a MQTT broker. That allows easy w-lan connecting of esp based devices interoperability The PLC shall communicate to sensors / actors hardwired, via modbus, analog voltage signals, ... interoperability The data formats, transport protocols and interfaces shall be derived from central managed masterdata","title":"Requirements"},{"location":"home/requirements/#requirements-to-the-system","text":"","title":"Requirements to the system"},{"location":"home/requirements/#most-important","text":"Hint In order to gain acceptance among stakeholders, it is absolutely necessary to guarantee the basic functions that are also available with a conventional installation. This means that if the control level or process level devices fail, the following basic functions are retained: Switching the light on / off with conventional switches It must be possible to raise and lower the blinds by pressing buttons Sockets must be switched on moderately by default The heater must maintain the last specified temperature.","title":"Most important"},{"location":"home/requirements/#some-more","text":"type description robustnes When the system is switched on (e.g. after a power failure) the system itself should start up and be active robustnes Services / applications on servers should be monitored automatically and restarted if necessary robustnes Backups of databases and other artifacts should be created automatically robustnes Basic functions like switching light on/off must work even if the control level or parts of the process level fail interoperability The different components of the system shall provide apis to exchange information and communicate with internal and external applications and systems. interoperability The system shall be open to different transport protocols and publishing / describing interfaces. interoperability For integrating iot devices the system shall provide a MQTT broker. That allows easy w-lan connecting of esp based devices interoperability The PLC shall communicate to sensors / actors hardwired, via modbus, analog voltage signals, ... interoperability The data formats, transport protocols and interfaces shall be derived from central managed masterdata","title":"Some more"},{"location":"images/readme_plantuml/","text":"plantuml code for readme \u00b6 until I get the plant-uml plugin working here is the code to the pictures Components of the auto home stack \u00b6 @ startuml skinparam component { FontColor black AttributeFontColor black FontSize 17 AttributeFontSize 15 AttributeFontname Droid Sans Mono BackgroundColor # 6 A9EFF BorderColor black ArrowColor # 222266 } title auto home stack skinparam componentStyle uml2 node \"user interface\" { frame \"deprecated\" { [ dotnet pc tool ] # Gray } [ dotnet pc tool ] <--> udp_plc [ web client ] < .. > http } cloud { interface www [ AWS ] --> www [ netatmo ] -> www } node \"ahs\" { interface data_logger as data_logger interface mqtt [ data logger server ] as dls [ rpi_nodered ] as nr dls - up -> [ dashboard ] [ dashboard ] -> http dls <-- data_logger www -> nr http <--> nr nr - right -> [ plc_xx ] nr <-> dls nr <- down -> mqtt udp_plc <-> [ plc_xx ] data_logger <- [ plc_xx ] [ plc_xy ] - up -> [ plc_xx ] [ esp ] < . up . > mqtt [ sensor ] - up -> [ plc_xx ] [ aktor ] <- up - [ plc_xx ] } @ enduml legend \u00b6 @ startuml node \"Legend\" { package \"device\" { [ item 1 ] as TMS # Tomato } folder \"tst\" { [ item 2 ] as CM # Lime } } @ enduml node red \u00b6 @ startuml [ * ] --> NodeRed udp -> NodeRed NodeRed -> udp udp : plc interface mqtt --> NodeRed NodeRed --> mqtt mqtt : field level devices \\ nesp 8266 , \\ nwatchdog services , ... iot --> NodeRed NodeRed --> iot iot : other interfaces \\ nlike rest apis , AWS S3 , \\ nssh to linux devices , \\ n ... NodeRed --> db db : MySQL and \\ nInfluxDB NodeRed : store all prozess \\ nand event data \\ nprozess data with rule engine \\ n @ enduml node_red rule engine \u00b6 @ startuml ( * ) --> new event If \"compare topic\" then --> [ matches ] \"create alarm\" --> send to receiver --> ( * ) else --> [ no match ] continue Endif --> ( * ) @ enduml","title":"Plantuml code"},{"location":"images/readme_plantuml/#plantuml-code-for-readme","text":"until I get the plant-uml plugin working here is the code to the pictures","title":"plantuml code for readme"},{"location":"images/readme_plantuml/#components-of-the-auto-home-stack","text":"@ startuml skinparam component { FontColor black AttributeFontColor black FontSize 17 AttributeFontSize 15 AttributeFontname Droid Sans Mono BackgroundColor # 6 A9EFF BorderColor black ArrowColor # 222266 } title auto home stack skinparam componentStyle uml2 node \"user interface\" { frame \"deprecated\" { [ dotnet pc tool ] # Gray } [ dotnet pc tool ] <--> udp_plc [ web client ] < .. > http } cloud { interface www [ AWS ] --> www [ netatmo ] -> www } node \"ahs\" { interface data_logger as data_logger interface mqtt [ data logger server ] as dls [ rpi_nodered ] as nr dls - up -> [ dashboard ] [ dashboard ] -> http dls <-- data_logger www -> nr http <--> nr nr - right -> [ plc_xx ] nr <-> dls nr <- down -> mqtt udp_plc <-> [ plc_xx ] data_logger <- [ plc_xx ] [ plc_xy ] - up -> [ plc_xx ] [ esp ] < . up . > mqtt [ sensor ] - up -> [ plc_xx ] [ aktor ] <- up - [ plc_xx ] } @ enduml","title":"Components of the auto home stack"},{"location":"images/readme_plantuml/#legend","text":"@ startuml node \"Legend\" { package \"device\" { [ item 1 ] as TMS # Tomato } folder \"tst\" { [ item 2 ] as CM # Lime } } @ enduml","title":"legend"},{"location":"images/readme_plantuml/#node-red","text":"@ startuml [ * ] --> NodeRed udp -> NodeRed NodeRed -> udp udp : plc interface mqtt --> NodeRed NodeRed --> mqtt mqtt : field level devices \\ nesp 8266 , \\ nwatchdog services , ... iot --> NodeRed NodeRed --> iot iot : other interfaces \\ nlike rest apis , AWS S3 , \\ nssh to linux devices , \\ n ... NodeRed --> db db : MySQL and \\ nInfluxDB NodeRed : store all prozess \\ nand event data \\ nprozess data with rule engine \\ n @ enduml","title":"node red"},{"location":"images/readme_plantuml/#node_red-rule-engine","text":"@ startuml ( * ) --> new event If \"compare topic\" then --> [ matches ] \"create alarm\" --> send to receiver --> ( * ) else --> [ no match ] continue Endif --> ( * ) @ enduml","title":"node_red rule engine"},{"location":"level_control/control_system/","text":"Control system \u00b6 Grafana \u00b6 Using an open source solution is much easier than implementing a monitor dashboard yourself. I had good experiences with grafana . Out of the box even larger time ranges are displayed performant. Grafana is the open source analytics and monitoring solution for every database I can recommend this installation pages mqtt mosquitto \u00b6 Eclipse Mosquitto is an open source message broker that implements the MQTT protocol","title":"control_system"},{"location":"level_control/control_system/#control-system","text":"","title":"Control system"},{"location":"level_control/control_system/#grafana","text":"Using an open source solution is much easier than implementing a monitor dashboard yourself. I had good experiences with grafana . Out of the box even larger time ranges are displayed performant. Grafana is the open source analytics and monitoring solution for every database I can recommend this installation pages","title":"Grafana"},{"location":"level_control/control_system/#mqtt-mosquitto","text":"Eclipse Mosquitto is an open source message broker that implements the MQTT protocol","title":"mqtt mosquitto"},{"location":"level_control/dotNet_tool/","text":"PC tool for controlling / monitoring the system \u00b6 The PC-Tool is written in C# and was developed during the commissioning phase (which will probably not be finished that soon ;-) ). The tool has a fancy surface and is suitable for carrying out basic parameter settings on the controller. It turns out that it is uncomfortable to rely on a windows pc to control the system. If you are interested you can look at it references.md Here are some historical pics of the outdated dot net pc tool. All devices / sensors / actuators could be configured in a parameter window. Due to its generic structure, any actuators can be added during runtime and addressed in the controller. These can then be positioned in the ui by drag and drop With this view all actors of a selected type can be observed and controlled Clicking on a specific image either triggers an action or opens a sub window with further options To visualize past data from the data logger the tool has a sql client with dashboard","title":"dotNet tool"},{"location":"level_control/dotNet_tool/#pc-tool-for-controlling-monitoring-the-system","text":"The PC-Tool is written in C# and was developed during the commissioning phase (which will probably not be finished that soon ;-) ). The tool has a fancy surface and is suitable for carrying out basic parameter settings on the controller. It turns out that it is uncomfortable to rely on a windows pc to control the system. If you are interested you can look at it references.md Here are some historical pics of the outdated dot net pc tool. All devices / sensors / actuators could be configured in a parameter window. Due to its generic structure, any actuators can be added during runtime and addressed in the controller. These can then be positioned in the ui by drag and drop With this view all actors of a selected type can be observed and controlled Clicking on a specific image either triggers an action or opens a sub window with further options To visualize past data from the data logger the tool has a sql client with dashboard","title":"PC tool for controlling / monitoring the system"},{"location":"level_control/node_red/","text":"Node red \u00b6 As control system and for the connection of other devices I currently use node-RED . Node-RED is a programming tool for wiring together hardware devices, APIs and online services It has already implemented interfaces (which are called 'nodes') to a lot of devices I use. Dashboards \u00b6 It is easy to make quick dash boards to monitor the sensor and health state of the devices. Or to configure debug / control clients for different devices Rule engine \u00b6 The rule engine is a function node that is triggered by the receipt of any message. In this example rule a sensor event from the light barrier triggers the rule engine. If the weather station detects that it is dark two lights are switched on. var plc_cmd = []; var alarm_info = 'not_processed' ; if ( t . startsWith ( 'v01/esp/basement/i/' )){ let lux = global . get ( 'PD.esp_basement.lux' ); let switch_value = 150 if ( lux < switch_value ){ alarm_info = 'esp/basement switch light on' plc_cmd . push ({ payload : \"aktor/light/basement_floor/set_switch_value#on\" , topic : \"eg\" }); plc_cmd . push ({ payload : \"aktor/light/basement_stairs/set_switch_value#on\" , topic : \"eg\" }); } else { alarm_info = 'esp/basement motion but not dark [lux: ' + lux + '] > ' + switch_value ; } } // for logging or later use a new alarm is generated // and stored at the database if ( alarm_info !== 'not_processed' ){ msg . alarm = { topic : t , payload : p , status : 'created' , time_created : getFormattedDate (), info : alarm_info } let ret = t . replace ( 'v01' , 're' ); // the alarm and commands for the PLC s are returned for further processing msg . topic = \"INSERT INTO node_log(topic, message) VALUES ( \\\"\" + ret + \"\\\", \\\"\" + alarm_info + \" / \" + p + \"\\\" )\" return [ msg , plc_cmd ]; } Here are the log messages when the motion sensor is triggered some hints \u00b6 Initialising Variable var count = context . get ( 'count' ) || 0 ; var count2 = context . get ( 'count2' ) || 0 ; // You can also use an object e.g var local = context . get ( 'data' ) || {}; if ( local . count === undefined ) //test exists { local . count = 0 ; } my config \u00b6 Imported Nodes (Plugins) \u00b6 name usage node-red-dashboard frontend dashboard elements node-red-contrib-fritz get network device status / control guest wlan node-red-contrib-s7 connection to PLCs via S7 protocol, almost no longer in use (replaced by the udp protocol) node-red-node-mysql reading / writing to maria database node-red-contrib-os access to operating system bevore switching to docker node-red-contrib-mqtt-broker mqtt client node-red-node-email send alarm / notification e-mails node-red-contrib-netatmo todo check if outdated node-red-contrib-netatmo-dashboard getting netatmo weather station data from cloud-account node-red-contrib-viera control the Panasonic TV Downloads \u00b6 If you are interested in the flows you can find the download link at the references.","title":"Node RED"},{"location":"level_control/node_red/#node-red","text":"As control system and for the connection of other devices I currently use node-RED . Node-RED is a programming tool for wiring together hardware devices, APIs and online services It has already implemented interfaces (which are called 'nodes') to a lot of devices I use.","title":"Node red"},{"location":"level_control/node_red/#dashboards","text":"It is easy to make quick dash boards to monitor the sensor and health state of the devices. Or to configure debug / control clients for different devices","title":"Dashboards"},{"location":"level_control/node_red/#rule-engine","text":"The rule engine is a function node that is triggered by the receipt of any message. In this example rule a sensor event from the light barrier triggers the rule engine. If the weather station detects that it is dark two lights are switched on. var plc_cmd = []; var alarm_info = 'not_processed' ; if ( t . startsWith ( 'v01/esp/basement/i/' )){ let lux = global . get ( 'PD.esp_basement.lux' ); let switch_value = 150 if ( lux < switch_value ){ alarm_info = 'esp/basement switch light on' plc_cmd . push ({ payload : \"aktor/light/basement_floor/set_switch_value#on\" , topic : \"eg\" }); plc_cmd . push ({ payload : \"aktor/light/basement_stairs/set_switch_value#on\" , topic : \"eg\" }); } else { alarm_info = 'esp/basement motion but not dark [lux: ' + lux + '] > ' + switch_value ; } } // for logging or later use a new alarm is generated // and stored at the database if ( alarm_info !== 'not_processed' ){ msg . alarm = { topic : t , payload : p , status : 'created' , time_created : getFormattedDate (), info : alarm_info } let ret = t . replace ( 'v01' , 're' ); // the alarm and commands for the PLC s are returned for further processing msg . topic = \"INSERT INTO node_log(topic, message) VALUES ( \\\"\" + ret + \"\\\", \\\"\" + alarm_info + \" / \" + p + \"\\\" )\" return [ msg , plc_cmd ]; } Here are the log messages when the motion sensor is triggered","title":"Rule engine"},{"location":"level_control/node_red/#some-hints","text":"Initialising Variable var count = context . get ( 'count' ) || 0 ; var count2 = context . get ( 'count2' ) || 0 ; // You can also use an object e.g var local = context . get ( 'data' ) || {}; if ( local . count === undefined ) //test exists { local . count = 0 ; }","title":"some hints"},{"location":"level_control/node_red/#my-config","text":"","title":"my config"},{"location":"level_control/node_red/#imported-nodes-plugins","text":"name usage node-red-dashboard frontend dashboard elements node-red-contrib-fritz get network device status / control guest wlan node-red-contrib-s7 connection to PLCs via S7 protocol, almost no longer in use (replaced by the udp protocol) node-red-node-mysql reading / writing to maria database node-red-contrib-os access to operating system bevore switching to docker node-red-contrib-mqtt-broker mqtt client node-red-node-email send alarm / notification e-mails node-red-contrib-netatmo todo check if outdated node-red-contrib-netatmo-dashboard getting netatmo weather station data from cloud-account node-red-contrib-viera control the Panasonic TV","title":"Imported Nodes (Plugins)"},{"location":"level_control/node_red/#downloads","text":"If you are interested in the flows you can find the download link at the references.","title":"Downloads"},{"location":"level_control/raspberry_setup/","text":"Raspberry setup \u00b6 Docker \u00b6 Most of the control components are running as docker image on a raspberry. Here are a few steps to set up: enable ssh server copy your puplic key to the raspberry for easier access cat ~/.ssh/id_rsa.pub | ssh pi_name@192.168.xxx.xxx -p 22 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' get docker ` sudo apt-get update && sudo apt-get upgrade -y ` ` curl -sSL https://get.docker.com | sh ` ` sudo usermod -aG docker $USER ` setup container mqtt mosquitto docker run -itd -p 1883 :1883 -p 9001 :9001 --name mosquitto_ah eclipse-mosquitto setup container node red Mind that as long as we run the mosquitto and node-red container at the same host the --link mosquitto_ah:broker is necessary. If changing the deployment to different machines update the node-red-mqtt-server from broker to the new ip address sudo chown -R 1000 :1000 /home/pi/.node-red docker run -it -p 1880 :1880 -p 7724 :7724/udp -p 7725 :7725/udp -v /home/pi/.node-red:/data --restart = always --name nodered_ah --link mosquitto_ah:broker nodered/node-red setup container grafana docker volume create grafana-storage docker run -d -p 3000 :3000 -v grafana-storage:/var/lib/grafana --name = grafana_ah grafana/grafana setup pi hole The network ad blocking / monitoring software pi-hole.net is not really connected to the home automation system, but it is always a good idear to have control over your network. Script device_status.py \u00b6 Download \u00b6 This script device_status.py is executed from the main raspberry. Some unit tests are here available (I used pytest). dependencies: pip3 install paho-mqtt If not using python3 replace subprocess with commands Purpose \u00b6 Its purpose is to get the status (temperature, ram usage, ...) of devices with ssh interface. Results will be puplished at MQTT for further processing. current clients: ip name component 192.168.1.39 og_floor piCorePlayer 192.168.1.40 eg_living piCorePlayer 192.168.1.41 og_bath piCorePlayer 192.168.1.211 rpi4 node-red + other container 192.168.1.200 syn NAS and home automation server Usage \u00b6 copy this script to clients: scp ~/repo/path_to_script/device_status.py rpi:~ To trigger this script we setup a crontab entry which executes this script every 10 minutes crontab -e */10 * * * * /usr/bin/python /home/pi/device_status.py get logfile from rpi for debugging purpose scp rpi:~/device_status.log ~/Desktop/LOG_device_status.log","title":"Raspberry setup"},{"location":"level_control/raspberry_setup/#raspberry-setup","text":"","title":"Raspberry setup"},{"location":"level_control/raspberry_setup/#docker","text":"Most of the control components are running as docker image on a raspberry. Here are a few steps to set up: enable ssh server copy your puplic key to the raspberry for easier access cat ~/.ssh/id_rsa.pub | ssh pi_name@192.168.xxx.xxx -p 22 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' get docker ` sudo apt-get update && sudo apt-get upgrade -y ` ` curl -sSL https://get.docker.com | sh ` ` sudo usermod -aG docker $USER ` setup container mqtt mosquitto docker run -itd -p 1883 :1883 -p 9001 :9001 --name mosquitto_ah eclipse-mosquitto setup container node red Mind that as long as we run the mosquitto and node-red container at the same host the --link mosquitto_ah:broker is necessary. If changing the deployment to different machines update the node-red-mqtt-server from broker to the new ip address sudo chown -R 1000 :1000 /home/pi/.node-red docker run -it -p 1880 :1880 -p 7724 :7724/udp -p 7725 :7725/udp -v /home/pi/.node-red:/data --restart = always --name nodered_ah --link mosquitto_ah:broker nodered/node-red setup container grafana docker volume create grafana-storage docker run -d -p 3000 :3000 -v grafana-storage:/var/lib/grafana --name = grafana_ah grafana/grafana setup pi hole The network ad blocking / monitoring software pi-hole.net is not really connected to the home automation system, but it is always a good idear to have control over your network.","title":"Docker"},{"location":"level_control/raspberry_setup/#script-device_statuspy","text":"","title":"Script device_status.py"},{"location":"level_control/raspberry_setup/#download","text":"This script device_status.py is executed from the main raspberry. Some unit tests are here available (I used pytest). dependencies: pip3 install paho-mqtt If not using python3 replace subprocess with commands","title":"Download"},{"location":"level_control/raspberry_setup/#purpose","text":"Its purpose is to get the status (temperature, ram usage, ...) of devices with ssh interface. Results will be puplished at MQTT for further processing. current clients: ip name component 192.168.1.39 og_floor piCorePlayer 192.168.1.40 eg_living piCorePlayer 192.168.1.41 og_bath piCorePlayer 192.168.1.211 rpi4 node-red + other container 192.168.1.200 syn NAS and home automation server","title":"Purpose"},{"location":"level_control/raspberry_setup/#usage","text":"copy this script to clients: scp ~/repo/path_to_script/device_status.py rpi:~ To trigger this script we setup a crontab entry which executes this script every 10 minutes crontab -e */10 * * * * /usr/bin/python /home/pi/device_status.py get logfile from rpi for debugging purpose scp rpi:~/device_status.log ~/Desktop/LOG_device_status.log","title":"Usage"},{"location":"level_field/field_level/","text":"Field level \u00b6 Wetter station \u00b6 For the weather station I decided for the P03/3-Modbus from Elsner. With it I can get the weather data: Brightness (east, south and west sun), wind speed, temperature and precipitation. With the Modbus variant I want to keep the possibility open to connect several participants (in special room sensors) to the control system via the bus system. The heating system \u00b6 My heating consists of the 20qm solar collectors and the \"romantic\" stove in the living room as well as an ETA SH20 twin. During the installation I saw that a maintenance interface is attached to the display. On inquiry with the manufacturer I got the RS232 protocol and thus the possibility by a CM1241 to access it. Here the protocoll: Byte startsign: alwas \u2019{\u2019 == hex 0x7B Byte Servicekennung Byte Servicekennung Byte Anzahl der Nutzdatenbytes Byte Pr\u00fcfsumme: alle Nutzdatenbytes addiert, modulo 256 ab 6. Byte Nutzdaten last Byte stoppsign alwas \u2019}\u2019 == hex 0x7D settings of serial interface: 19200 Baud, 1 Startbit, 8 Datenbits, 1 Stoppbit, NoParity, NoHandshake Herewith I inform the heating control that it should send out the actual values cyclically: # SEND_PTP_start ( REQ := # cmd . eta_start , \"PORT\" := # CP_Adress , BUFFER := # frame_start ); # cmd . eta_start := FALSE ; # SEND_PTP_cmd ( REQ := # cmd . eta_cmd , \"PORT\" := # CP_Adress , BUFFER := # frame_cmd );","title":"devices"},{"location":"level_field/field_level/#field-level","text":"","title":"Field level"},{"location":"level_field/field_level/#wetter-station","text":"For the weather station I decided for the P03/3-Modbus from Elsner. With it I can get the weather data: Brightness (east, south and west sun), wind speed, temperature and precipitation. With the Modbus variant I want to keep the possibility open to connect several participants (in special room sensors) to the control system via the bus system.","title":"Wetter station"},{"location":"level_field/field_level/#the-heating-system","text":"My heating consists of the 20qm solar collectors and the \"romantic\" stove in the living room as well as an ETA SH20 twin. During the installation I saw that a maintenance interface is attached to the display. On inquiry with the manufacturer I got the RS232 protocol and thus the possibility by a CM1241 to access it. Here the protocoll: Byte startsign: alwas \u2019{\u2019 == hex 0x7B Byte Servicekennung Byte Servicekennung Byte Anzahl der Nutzdatenbytes Byte Pr\u00fcfsumme: alle Nutzdatenbytes addiert, modulo 256 ab 6. Byte Nutzdaten last Byte stoppsign alwas \u2019}\u2019 == hex 0x7D settings of serial interface: 19200 Baud, 1 Startbit, 8 Datenbits, 1 Stoppbit, NoParity, NoHandshake Herewith I inform the heating control that it should send out the actual values cyclically: # SEND_PTP_start ( REQ := # cmd . eta_start , \"PORT\" := # CP_Adress , BUFFER := # frame_start ); # cmd . eta_start := FALSE ; # SEND_PTP_cmd ( REQ := # cmd . eta_cmd , \"PORT\" := # CP_Adress , BUFFER := # frame_cmd );","title":"The heating system"},{"location":"level_field/iot_multisensor/","text":"IoT multisensor \u00b6 Install Arduino IDE \u00b6 The Arduino IDE from my debian package repository is very old. To get a newer version of the Arduino IDE got to the Official Website and download your package. cd ./Downloads sudo tar xvJf arduino-1.8.12-linux64.tar.xz -C /opt ls -lh /opt/ sudo -E /opt/arduino-1.8.12/install.sh Now, you have to add the Debian 10 login user to the dialout, tty, uucp and plugdev group. https://linuxhint.com/install_arduino_ide_debian_10/ ESP8266 \u00b6 To enable the esp8266 libs at Arduino IDE Go to File > Preferences -> Additional Board Manager URLs: http://arduino.esp8266.com/stable/package_esp8266com_index.json Tools > Board -> Boards Manager -> Search for ESP8266 and install Dependency libs: git clone https://github.com/knolleary/pubsubclient.git git clone https://github.com/adafruit/DHT-sensor-library.git copy to ~/Arduino/libraries Features: read temperatur / humility and publish cyclic read light lux and publish cyclic detect motion and publish at detection (on rising edge) MQTT Interface subscription topics (start with prefix(v01/esp/) + esp_name + topic_type) e.g. v01/esp/nodeMCUIBS/config/get_status topic meaning /config/echo just send an reply /config/get_status[value: \"\"; status; prozess; heap] /config/set_name [new name] change name of esp (with prefix for topics) /config/send_intervall_sensor [new time in ms] e.g. \"10000\" for 10s /config/send_intervall_status watchdog with status information /config/reset [dht, setup, vars] NodeMCU GPIO \u00b6 node gpio pinout digitalWrite did NOT work with GPIOs 6, 7, 8, 11, and ADC (A0) digitalRead did NOT work with GPIOs 1, 3, 6, 7, 8, 11, and the ADC (A0) GPIO sensoric \u00b6 pin DHT22 AM312 KY-018 1 VCC VCC GND 2 DATA=D7 OUT=D2/D5 VCC 3 nc GND DATA=A0 4 GND NODE mcu platine soldered \u00b6 GPIO platine-color device D2 orange pir 1 -> pin_2 (stairs) D5 yellow pir 2 -> pin_2 (corridor) 3V red pir1/2 -> pin_1 3V violett pir1/2 -> pin_1 gnd blue pir1/2 -> pin_3 gnd grey pir1/2 -> pin_3 A0 green S g yellow middle VV orange - D7 grey DHT_2 3V black DHT_1 g white DHT_4 NODE mcu general \u00b6 GPIO device GPIO device A0 KY-S [black] D0 G KY-middle [brown] D1 VV KY - [red] D2 pir middle [orange] S3 D3 S2 D4 S1 3V SC G S0 D5 pir middle [yellow] SK D6 G pir 3 [red/grey] D7 DHT22 2 (signal) [orange] 3V pir 1 [blue/green] D8 EN RX RST TX G G DHT22 4 [red] VIN 3V DHT22 1 [brown] - === === - 3D case \u00b6 This is the 3D model of the case Natural environment \u00b6 Here you can see the sensor in the wild and here the inside of it Downloads \u00b6 You can download the STL file here: new_multisensor_V0.1 The arduino sketch is stored here: ah_iot_multisensor_v06","title":"IoT Multisensor"},{"location":"level_field/iot_multisensor/#iot-multisensor","text":"","title":"IoT multisensor"},{"location":"level_field/iot_multisensor/#install-arduino-ide","text":"The Arduino IDE from my debian package repository is very old. To get a newer version of the Arduino IDE got to the Official Website and download your package. cd ./Downloads sudo tar xvJf arduino-1.8.12-linux64.tar.xz -C /opt ls -lh /opt/ sudo -E /opt/arduino-1.8.12/install.sh Now, you have to add the Debian 10 login user to the dialout, tty, uucp and plugdev group. https://linuxhint.com/install_arduino_ide_debian_10/","title":"Install Arduino IDE"},{"location":"level_field/iot_multisensor/#esp8266","text":"To enable the esp8266 libs at Arduino IDE Go to File > Preferences -> Additional Board Manager URLs: http://arduino.esp8266.com/stable/package_esp8266com_index.json Tools > Board -> Boards Manager -> Search for ESP8266 and install Dependency libs: git clone https://github.com/knolleary/pubsubclient.git git clone https://github.com/adafruit/DHT-sensor-library.git copy to ~/Arduino/libraries Features: read temperatur / humility and publish cyclic read light lux and publish cyclic detect motion and publish at detection (on rising edge) MQTT Interface subscription topics (start with prefix(v01/esp/) + esp_name + topic_type) e.g. v01/esp/nodeMCUIBS/config/get_status topic meaning /config/echo just send an reply /config/get_status[value: \"\"; status; prozess; heap] /config/set_name [new name] change name of esp (with prefix for topics) /config/send_intervall_sensor [new time in ms] e.g. \"10000\" for 10s /config/send_intervall_status watchdog with status information /config/reset [dht, setup, vars]","title":"ESP8266"},{"location":"level_field/iot_multisensor/#nodemcu-gpio","text":"node gpio pinout digitalWrite did NOT work with GPIOs 6, 7, 8, 11, and ADC (A0) digitalRead did NOT work with GPIOs 1, 3, 6, 7, 8, 11, and the ADC (A0)","title":"NodeMCU GPIO"},{"location":"level_field/iot_multisensor/#gpio-sensoric","text":"pin DHT22 AM312 KY-018 1 VCC VCC GND 2 DATA=D7 OUT=D2/D5 VCC 3 nc GND DATA=A0 4 GND","title":"GPIO sensoric"},{"location":"level_field/iot_multisensor/#node-mcu-platine-soldered","text":"GPIO platine-color device D2 orange pir 1 -> pin_2 (stairs) D5 yellow pir 2 -> pin_2 (corridor) 3V red pir1/2 -> pin_1 3V violett pir1/2 -> pin_1 gnd blue pir1/2 -> pin_3 gnd grey pir1/2 -> pin_3 A0 green S g yellow middle VV orange - D7 grey DHT_2 3V black DHT_1 g white DHT_4","title":"NODE mcu platine soldered"},{"location":"level_field/iot_multisensor/#node-mcu-general","text":"GPIO device GPIO device A0 KY-S [black] D0 G KY-middle [brown] D1 VV KY - [red] D2 pir middle [orange] S3 D3 S2 D4 S1 3V SC G S0 D5 pir middle [yellow] SK D6 G pir 3 [red/grey] D7 DHT22 2 (signal) [orange] 3V pir 1 [blue/green] D8 EN RX RST TX G G DHT22 4 [red] VIN 3V DHT22 1 [brown] - === === -","title":"NODE mcu general"},{"location":"level_field/iot_multisensor/#3d-case","text":"This is the 3D model of the case","title":"3D case"},{"location":"level_field/iot_multisensor/#natural-environment","text":"Here you can see the sensor in the wild and here the inside of it","title":"Natural environment"},{"location":"level_field/iot_multisensor/#downloads","text":"You can download the STL file here: new_multisensor_V0.1 The arduino sketch is stored here: ah_iot_multisensor_v06","title":"Downloads"},{"location":"level_process/dataLoggerServer/","text":"dataLoggerServer \u00b6 During the early implementing phase of the home automation system i needed some logging mechanism for bug finding. And after implementing this interface at the plc and i kept it for data logging. Meanwhile the usual data logging is realized within the control system (node red) but for redundancy purpose the mechanism is still alive. The main script provides a IP listener for every configuret plc connection. Messages from the remote clients will be parsed and stored in a db.","title":"Data logger"},{"location":"level_process/dataLoggerServer/#dataloggerserver","text":"During the early implementing phase of the home automation system i needed some logging mechanism for bug finding. And after implementing this interface at the plc and i kept it for data logging. Meanwhile the usual data logging is realized within the control system (node red) but for redundancy purpose the mechanism is still alive. The main script provides a IP listener for every configuret plc connection. Messages from the remote clients will be parsed and stored in a db.","title":"dataLoggerServer"},{"location":"level_process/plc_program/","text":"Processing level \u00b6 My focus was on a generic solution in order to be able to extend the control program easily or to port it to another environment without major adaptations. Simatic Project library \u00b6 For basic functions which are performed in more then one plc I maintain the code in the TIA Project library . Actuator \u00b6 Here is an example of the light building block. This is called several times in a superimposed \"control\" block. ash became light IF # turn_on THEN # switch_signal := true ; END_IF ; # Tturn_off ( IN := # turn_off , PT := t # 5 s , Q => # tmp_turn_off_hold ); IF # param . \"auto-off_lux_enable\" THEN # \"Tauto-off-lux\" ( IN := \"sense_lux_stairs_og\" > # param . \"auto-off_lux\" , PT := t # 10 s , Q => # tmp_turn_off_lux ); END_IF ; Since the interior of the house took place over the winter, I realized the light building block first. The module has one input to change the output signal and one input to switch it on and one input to switch it off. The output switches directly the coupling relay which controls the physical light. In the \"inner life\" of the module there is a delay to prevent the rear switching on/off (I implemented this function because of a stress test of my kids). In addition there is a timer which switches off the light after a configured time and the possibility to also switch off the light if a brightness value is exceeded. and getting dark again The blind building block was a little trickier. Because I can't evaluate the signal of the physical end stop in the control I measured the time of the up and down movement. The target position and the target angle of the slats (each in 0 - 100%) are transferred to an extra \"blind motor\" module. In this module, the time of the actual position and the actual angle is continuously normalized and the target values are approached in a state machine. In addition, I have locked a simultaneous up and down signal at the outputs at different positions. // normierung der position/zeit zwischen 0 - 100 # cur_data . position := REAL_TO_INT ( NORM_X ( MIN := 0 , VALUE := # cur_data . position_in_time , MAX := # DRIVING_TIME_POSITION ) * # DIGIT_SCALA ); # cur_data . angle := REAL_TO_INT ( NORM_X ( MIN := 0 , VALUE := # cur_data . angle_in_time , MAX := # DRIVING_TIME_ANGLE ) * # DIGIT_SCALA ); END_IF ; The blind module has the following features: When the up/down button is pressed briefly, the blind moves to the respective end position (i.e. completely up or completely down). If the blind is moving and the up/down button is pressed again, the motor stops. If a button is pressed for a longer period of time (> 300ms have become established), the motor moves until the button is released again. Automatic startup when a parameterized wind speed is exceeded (measured by the weather station) Time-controlled approach of a position and an angle (I have planned 10 events so far but needed a maximum of 4) still on the TO-DO list: event-based approaching of an angle due to solar radiation and room temperature heating module The heating module is kept simpler again. Due to the relatively sluggish wall heating, I have not yet implemented an exact regulation of the heating circuits. In order to avoid a constant toggling the servomotors switch off only with 0,5 degrees over target. In addition, an interval can be parameterized if the temperature falls below the target value and the time of day during which the module is to be active. For IBS purposes (and e.g. vacation time), the PC-Tool can also be used to switch to manual mode (defined on or off). TO-DO Current I have not yet realized the socket module. Currently I only switch the sockets in the children's room. Since here however a bedside lamp is switched I also used the light component for it. Data ingest \u00b6 Data logger \u00b6 The data logger client communicates via the TCP/IP protocol with the server running on the NAS. NodeUdp \u00b6 Simatic program \u00b6 For each actuator type (light, jalouse, socket, heating) there is a general function module that is instantiated for each device. communication udp \u00b6 For external communication each PLC contains a net_interface block. Here a UDP/IP server is realized in a state machine which can be addressed e.g. via the PC-Tool. Each instance of an actuator block is given a unique ID. This ID can also be found in the PC tool. communication plc <-> plc \u00b6 The actual rule engine (which is currently implemented via node-red on a raspberry) is running stable so far. Hint Nevertheless it should be guaranteed that some important functions are available even if the rule engine fails. For example, the blinds on the ground floor must be raised in the event of a storm warning. Therefore it is necessary that the plcs exchange selected signals directly. The plc on the ground floor uses the GET module to read the current wind speed from the plc on the upper floor # GET_sensor_values ( REQ := # next_cycle_flag , ID := W # 16 # 100 , ADDR_1 := P # DB80 . DBX0 .0 BYTE 4 , RD_1 := # remote_sensor_weather_wind );","title":"PLC program"},{"location":"level_process/plc_program/#processing-level","text":"My focus was on a generic solution in order to be able to extend the control program easily or to port it to another environment without major adaptations.","title":"Processing level"},{"location":"level_process/plc_program/#simatic-project-library","text":"For basic functions which are performed in more then one plc I maintain the code in the TIA Project library .","title":"Simatic Project library"},{"location":"level_process/plc_program/#actuator","text":"Here is an example of the light building block. This is called several times in a superimposed \"control\" block. ash became light IF # turn_on THEN # switch_signal := true ; END_IF ; # Tturn_off ( IN := # turn_off , PT := t # 5 s , Q => # tmp_turn_off_hold ); IF # param . \"auto-off_lux_enable\" THEN # \"Tauto-off-lux\" ( IN := \"sense_lux_stairs_og\" > # param . \"auto-off_lux\" , PT := t # 10 s , Q => # tmp_turn_off_lux ); END_IF ; Since the interior of the house took place over the winter, I realized the light building block first. The module has one input to change the output signal and one input to switch it on and one input to switch it off. The output switches directly the coupling relay which controls the physical light. In the \"inner life\" of the module there is a delay to prevent the rear switching on/off (I implemented this function because of a stress test of my kids). In addition there is a timer which switches off the light after a configured time and the possibility to also switch off the light if a brightness value is exceeded. and getting dark again The blind building block was a little trickier. Because I can't evaluate the signal of the physical end stop in the control I measured the time of the up and down movement. The target position and the target angle of the slats (each in 0 - 100%) are transferred to an extra \"blind motor\" module. In this module, the time of the actual position and the actual angle is continuously normalized and the target values are approached in a state machine. In addition, I have locked a simultaneous up and down signal at the outputs at different positions. // normierung der position/zeit zwischen 0 - 100 # cur_data . position := REAL_TO_INT ( NORM_X ( MIN := 0 , VALUE := # cur_data . position_in_time , MAX := # DRIVING_TIME_POSITION ) * # DIGIT_SCALA ); # cur_data . angle := REAL_TO_INT ( NORM_X ( MIN := 0 , VALUE := # cur_data . angle_in_time , MAX := # DRIVING_TIME_ANGLE ) * # DIGIT_SCALA ); END_IF ; The blind module has the following features: When the up/down button is pressed briefly, the blind moves to the respective end position (i.e. completely up or completely down). If the blind is moving and the up/down button is pressed again, the motor stops. If a button is pressed for a longer period of time (> 300ms have become established), the motor moves until the button is released again. Automatic startup when a parameterized wind speed is exceeded (measured by the weather station) Time-controlled approach of a position and an angle (I have planned 10 events so far but needed a maximum of 4) still on the TO-DO list: event-based approaching of an angle due to solar radiation and room temperature heating module The heating module is kept simpler again. Due to the relatively sluggish wall heating, I have not yet implemented an exact regulation of the heating circuits. In order to avoid a constant toggling the servomotors switch off only with 0,5 degrees over target. In addition, an interval can be parameterized if the temperature falls below the target value and the time of day during which the module is to be active. For IBS purposes (and e.g. vacation time), the PC-Tool can also be used to switch to manual mode (defined on or off). TO-DO Current I have not yet realized the socket module. Currently I only switch the sockets in the children's room. Since here however a bedside lamp is switched I also used the light component for it.","title":"Actuator"},{"location":"level_process/plc_program/#data-ingest","text":"","title":"Data ingest"},{"location":"level_process/plc_program/#data-logger","text":"The data logger client communicates via the TCP/IP protocol with the server running on the NAS.","title":"Data logger"},{"location":"level_process/plc_program/#nodeudp","text":"","title":"NodeUdp"},{"location":"level_process/plc_program/#simatic-program","text":"For each actuator type (light, jalouse, socket, heating) there is a general function module that is instantiated for each device.","title":"Simatic program"},{"location":"level_process/plc_program/#communication-udp","text":"For external communication each PLC contains a net_interface block. Here a UDP/IP server is realized in a state machine which can be addressed e.g. via the PC-Tool. Each instance of an actuator block is given a unique ID. This ID can also be found in the PC tool.","title":"communication udp"},{"location":"level_process/plc_program/#communication-plc-plc","text":"The actual rule engine (which is currently implemented via node-red on a raspberry) is running stable so far. Hint Nevertheless it should be guaranteed that some important functions are available even if the rule engine fails. For example, the blinds on the ground floor must be raised in the event of a storm warning. Therefore it is necessary that the plcs exchange selected signals directly. The plc on the ground floor uses the GET module to read the current wind speed from the plc on the upper floor # GET_sensor_values ( REQ := # next_cycle_flag , ID := W # 16 # 100 , ADDR_1 := P # DB80 . DBX0 .0 BYTE 4 , RD_1 := # remote_sensor_weather_wind );","title":"communication plc &lt;-&gt; plc"},{"location":"level_process/simatic_plc/","text":"The hardware \u00b6 For monitoring and control of most hard-wired sensor/actuator devices I use Siemens Simatic Series 1200 PLCs. These are actually used in industrial environments (so they meet my requirements regarding robustness) and were priced within my budget. The picture shows a sub-distributor during the construction phase. Right beside the multimeter you can see a 1214C PLC with 3x DI/DO expansion modules. The PLCs are programmed with SCL (Structured Control Language), which has a Pascal-like syntax. In the following I describe the user program in excerpts.","title":"Simatic PLC"},{"location":"level_process/simatic_plc/#the-hardware","text":"For monitoring and control of most hard-wired sensor/actuator devices I use Siemens Simatic Series 1200 PLCs. These are actually used in industrial environments (so they meet my requirements regarding robustness) and were priced within my budget. The picture shows a sub-distributor during the construction phase. Right beside the multimeter you can see a 1214C PLC with 3x DI/DO expansion modules. The PLCs are programmed with SCL (Structured Control Language), which has a Pascal-like syntax. In the following I describe the user program in excerpts.","title":"The hardware"},{"location":"mds/heating_circuit_distributor/","text":"heating circuit distributor \u00b6 distributor upper floor \u00b6 circuit room location length 1 child east wall 87 2 child west wall 86 3 north west wall 88 4 bath wall 94 5 - - - 6 bath floor 51 distributor ground floor \u00b6 circuit room location length 1 entrance floor ? 2 office wall 112 3 living room wall 111 4 kitchen, dining wall 130 5 - - - 6 - - -","title":"heating circuit"},{"location":"mds/heating_circuit_distributor/#heating-circuit-distributor","text":"","title":"heating circuit distributor"},{"location":"mds/heating_circuit_distributor/#distributor-upper-floor","text":"circuit room location length 1 child east wall 87 2 child west wall 86 3 north west wall 88 4 bath wall 94 5 - - - 6 bath floor 51","title":"distributor upper floor"},{"location":"mds/heating_circuit_distributor/#distributor-ground-floor","text":"circuit room location length 1 entrance floor ? 2 office wall 112 3 living room wall 111 4 kitchen, dining wall 130 5 - - - 6 - - -","title":"distributor ground floor"},{"location":"mds/mds/","text":"Configuration / master data \u00b6 This content is more for my personal documentation. These are mainly: Topics of the m2m communication protocol Table of variables of inputs/outputs Wiring and assignment information","title":"Master data"},{"location":"mds/mds/#configuration-master-data","text":"This content is more for my personal documentation. These are mainly: Topics of the m2m communication protocol Table of variables of inputs/outputs Wiring and assignment information","title":"Configuration / master data"},{"location":"mds/network_wiring/","text":"Network wiring plan \u00b6 Legend \u00b6 Short Floor Place Description nc24 basement network cabinet server room 24 ports nsg ground network socket ground floor connection sockets opp12 ground office patch panel 12 ports plc_g ground plc box ground floor 2 ports nsu upper network socket upper floor connection sockets plc_u upper plc box upper floor 2 ports upp? upper upper floor patch panel not yet installed plc_car outside plc box carport 2 ports Network cabinet 24 port (nc24) \u00b6 The main patch-panel located in the basement network cabinet nc24 remote ground floor \u00b6 Port Place ground floor Remote station comment 1 office 1 TODO: ???? TODO: ???? 2 plc_g PLC ground floor used port n/a reserved - 4 nsg living/dining south right 5 opp12 office patch panel/Port 11 6 nsg living east left 7 kitchen north no can yet not checked 8 office 2 TODO: ???? TODO: ???? 9 nsg kitchen west right error pin 3/6 10 opp12 office patch panel/Port 12 bridge router DSL n/a reserved - n/a reserved - ?? plc_g PLC ground floor reserve/unhooked not checked nc24 remote upper floor \u00b6 Port Place upper floor Remote station comment 13 plc_u PLC upper floor n/a reserved - n/a reserved - 16 nsu child-east wall IP-cam 17 nsu parents east right 18 upp? TODO: ???? 19 nsu child-west east right n/a reserved - 21 nsu child-east west right 22 plc_car PLC carport n/a reserved - n/a reserved - Office patch panel (opp12) \u00b6 Office ground floor 12 port patch panel with switch bridge router DSL port 6 <-> 12 Port Remote station Place Port 1 nsg office east-south left 2 nsg office east-south right 3 nsg office east-north right 4 nsg office west right 5 nsg office south right 6 nsg living east right 7 nsg living south-east right 8 nsg living south-east left 9 nsg office south left 10 nsg living south-middle left 11 nc24 Network cabinet 24 port Port 5 12 nc24 Network cabinet 24 port Port 10 not applicable / unhooked kitchen west left kitchen north office west left office east-north left Upper floor patch panel (upp?) \u00b6 not yet installed Network socket \u00b6 Ground floor (nsg) \u00b6 Room Place Port Remote/Port office east-north left unhooked office east-north right opp12/3 office east-south left opp12/1 office east-south right opp12/2 office south left opp12/9 office south right opp12/5 office west left unhooked office west right opp12/4 living east left nc24/6 living east right opp12/6 living south-east left opp12/8 living south-east right opp12/7 living/dining south left opp12/10 living/dining south right nc24/4 kitchen west left opp12 unhooked kitchen west right nc24/9 kitchen north left unhooked kitchen north right unhooked pantry plc-box 1 nc24/2 pantry plc-box reserve nc24/10 Upper floor (nsu) \u00b6 Room Place Port Remote bath south left - bath south right - child-east west left - child-east west right nc24/21 child-east north left - child-east north right - child-east wall IP-cam nc24/16 child-west east left - child-west east right nc24/19 child-west north left - child-west north right - parents east left - parents east right nc24/17 parents west left - parents west right - child-east plc-box 1 nc24/13 child-east plc-box reserve ?? current DSL connection \u00b6 To avoid an additional wlan repeater, the DSL router is located on the ground floor.","title":"Network wiring"},{"location":"mds/network_wiring/#network-wiring-plan","text":"","title":"Network wiring plan"},{"location":"mds/network_wiring/#legend","text":"Short Floor Place Description nc24 basement network cabinet server room 24 ports nsg ground network socket ground floor connection sockets opp12 ground office patch panel 12 ports plc_g ground plc box ground floor 2 ports nsu upper network socket upper floor connection sockets plc_u upper plc box upper floor 2 ports upp? upper upper floor patch panel not yet installed plc_car outside plc box carport 2 ports","title":"Legend"},{"location":"mds/network_wiring/#network-cabinet-24-port-nc24","text":"The main patch-panel located in the basement network cabinet","title":"Network cabinet 24 port (nc24)"},{"location":"mds/network_wiring/#nc24-remote-ground-floor","text":"Port Place ground floor Remote station comment 1 office 1 TODO: ???? TODO: ???? 2 plc_g PLC ground floor used port n/a reserved - 4 nsg living/dining south right 5 opp12 office patch panel/Port 11 6 nsg living east left 7 kitchen north no can yet not checked 8 office 2 TODO: ???? TODO: ???? 9 nsg kitchen west right error pin 3/6 10 opp12 office patch panel/Port 12 bridge router DSL n/a reserved - n/a reserved - ?? plc_g PLC ground floor reserve/unhooked not checked","title":"nc24 remote ground floor"},{"location":"mds/network_wiring/#nc24-remote-upper-floor","text":"Port Place upper floor Remote station comment 13 plc_u PLC upper floor n/a reserved - n/a reserved - 16 nsu child-east wall IP-cam 17 nsu parents east right 18 upp? TODO: ???? 19 nsu child-west east right n/a reserved - 21 nsu child-east west right 22 plc_car PLC carport n/a reserved - n/a reserved -","title":"nc24 remote upper floor"},{"location":"mds/network_wiring/#office-patch-panel-opp12","text":"Office ground floor 12 port patch panel with switch bridge router DSL port 6 <-> 12 Port Remote station Place Port 1 nsg office east-south left 2 nsg office east-south right 3 nsg office east-north right 4 nsg office west right 5 nsg office south right 6 nsg living east right 7 nsg living south-east right 8 nsg living south-east left 9 nsg office south left 10 nsg living south-middle left 11 nc24 Network cabinet 24 port Port 5 12 nc24 Network cabinet 24 port Port 10 not applicable / unhooked kitchen west left kitchen north office west left office east-north left","title":"Office patch panel (opp12)"},{"location":"mds/network_wiring/#upper-floor-patch-panel-upp","text":"not yet installed","title":"Upper floor patch panel (upp?)"},{"location":"mds/network_wiring/#network-socket","text":"","title":"Network socket"},{"location":"mds/network_wiring/#ground-floor-nsg","text":"Room Place Port Remote/Port office east-north left unhooked office east-north right opp12/3 office east-south left opp12/1 office east-south right opp12/2 office south left opp12/9 office south right opp12/5 office west left unhooked office west right opp12/4 living east left nc24/6 living east right opp12/6 living south-east left opp12/8 living south-east right opp12/7 living/dining south left opp12/10 living/dining south right nc24/4 kitchen west left opp12 unhooked kitchen west right nc24/9 kitchen north left unhooked kitchen north right unhooked pantry plc-box 1 nc24/2 pantry plc-box reserve nc24/10","title":"Ground floor (nsg)"},{"location":"mds/network_wiring/#upper-floor-nsu","text":"Room Place Port Remote bath south left - bath south right - child-east west left - child-east west right nc24/21 child-east north left - child-east north right - child-east wall IP-cam nc24/16 child-west east left - child-west east right nc24/19 child-west north left - child-west north right - parents east left - parents east right nc24/17 parents west left - parents west right - child-east plc-box 1 nc24/13 child-east plc-box reserve ??","title":"Upper floor (nsu)"},{"location":"mds/network_wiring/#current-dsl-connection","text":"To avoid an additional wlan repeater, the DSL router is located on the ground floor.","title":"current DSL connection"},{"location":"mds/plcVarToDB_car/","text":"tag table PLC variables: car \u00b6 plcName name Path Data Type LogicalAddress car OLight_Ceiling_LEDStripes Standard-Variablentabelle Bool Q0.1 car OLight_drive Standard-Variablentabelle Bool Q0.0 car IphotoSensor_ON Standard-Variablentabelle Bool I0.0 car IphotoSensor_OFF Standard-Variablentabelle Bool I0.1 car ImotionSensor Standard-Variablentabelle Bool I0.2 car OLight_inside Standard-Variablentabelle Bool Q0.2 car Itaster_on Standard-Variablentabelle Bool I0.4 car Itaster_off Standard-Variablentabelle Bool I0.3 car transfer_LUX_weather_station Standard-Variablentabelle Int MW80 car signal_IphotoSensor Standard-Variablentabelle Bool M20.0 car signal_ImotionSensor Standard-Variablentabelle Bool M20.1 car HMI_aktor_light_ceilingLEDStripe HMI Bool M30.0 car HMI_aktor_light_drive HMI Bool M30.1 car HMI_aktor_light_inside_ceiling HMI Bool M30.2 car HMI_time_sec HMI Int MW32 car dbg_word HMI Time MD34 car dbg_nodered Standard-Variablentabelle Int MW42 car dbg_udp_connect_counter Standard-Variablentabelle Int MW44 car dbg_udp_connect_error_counter Standard-Variablentabelle Int MW46 car dbg_udp_rcv_counter Standard-Variablentabelle Int MW48 car tmp_com_error Standard-Variablentabelle Bool M5.0 car tmp_com_status Standard-Variablentabelle Word MW6 car tmp_com_statusNE0 Standard-Variablentabelle Word MW8 car tmp_com_errorNE0 Standard-Variablentabelle Bool M5.1","title":"plc tag car"},{"location":"mds/plcVarToDB_car/#tag-table-plc-variables-car","text":"plcName name Path Data Type LogicalAddress car OLight_Ceiling_LEDStripes Standard-Variablentabelle Bool Q0.1 car OLight_drive Standard-Variablentabelle Bool Q0.0 car IphotoSensor_ON Standard-Variablentabelle Bool I0.0 car IphotoSensor_OFF Standard-Variablentabelle Bool I0.1 car ImotionSensor Standard-Variablentabelle Bool I0.2 car OLight_inside Standard-Variablentabelle Bool Q0.2 car Itaster_on Standard-Variablentabelle Bool I0.4 car Itaster_off Standard-Variablentabelle Bool I0.3 car transfer_LUX_weather_station Standard-Variablentabelle Int MW80 car signal_IphotoSensor Standard-Variablentabelle Bool M20.0 car signal_ImotionSensor Standard-Variablentabelle Bool M20.1 car HMI_aktor_light_ceilingLEDStripe HMI Bool M30.0 car HMI_aktor_light_drive HMI Bool M30.1 car HMI_aktor_light_inside_ceiling HMI Bool M30.2 car HMI_time_sec HMI Int MW32 car dbg_word HMI Time MD34 car dbg_nodered Standard-Variablentabelle Int MW42 car dbg_udp_connect_counter Standard-Variablentabelle Int MW44 car dbg_udp_connect_error_counter Standard-Variablentabelle Int MW46 car dbg_udp_rcv_counter Standard-Variablentabelle Int MW48 car tmp_com_error Standard-Variablentabelle Bool M5.0 car tmp_com_status Standard-Variablentabelle Word MW6 car tmp_com_statusNE0 Standard-Variablentabelle Word MW8 car tmp_com_errorNE0 Standard-Variablentabelle Bool M5.1","title":"tag table PLC variables: car"},{"location":"mds/plcVarToDB_eg/","text":"tag table PLC variables: eg \u00b6 plcName name Path Data Type LogicalAddress eg IdiningWest_rightMiddle IN Bool I6.0 eg Ioffice_jal_down IN Bool I6.1 eg Ioffice_rightUp IN Bool I6.2 eg IdiningSouth_jal-living_down IN Bool I6.3 eg IdiningWest_rightUp IN Bool I6.5 eg Ioffice_jal_up IN Bool I6.6 eg IdiningSouth_rightUp IN Bool I6.7 eg IdiningSouth_rightMiddle IN Bool I7.0 eg Ioffice_left IN Bool I7.1 eg IdiningWest_leftUp IN Bool I7.2 eg IdiningSouth_jal_dining_up IN Bool I7.3 eg IdiningSouth_jal_dining_down IN Bool I7.4 eg Ioffice_right IN Bool I7.5 eg IdiningSouth_down IN Bool I8.0 eg IdiningWest_leftDown IN Bool I8.1 eg IdiningSouth_jal_living_up IN Bool I8.2 eg IdiningSouth_leftMiddle IN Bool I8.3 eg Ichimney_rightUp IN Bool I8.4 eg Ikitchens_leftUp IN Bool I8.5 eg Iwardrobe_leftUp IN Bool I8.6 eg Ichimney_rightMiddle IN Bool I8.7 eg Ioffice_rightDown IN Bool I9.0 eg IdiningSouth_leftUp IN Bool I9.1 eg IdiningWest_leftMiddle IN Bool I9.2 eg IdiningWest_rightDown IN Bool I9.3 eg Ikitchens_leftDown IN Bool I9.4 eg Ikitchens_rigthUp IN Bool I9.7 eg Ikitchenh_jal_down IN Bool I10.0 eg Ikitchens_rightDown IN Bool I10.1 eg Ibasement_heater IN Bool I10.2 eg Ichimney_leftDown IN Bool I10.3 eg Iwardrobe_leftDown IN Bool I10.4 eg Ibasement_washroom IN Bool I10.5 eg Iwardrobe_rightDown IN Bool I10.6 eg Ibasement_corridorUp IN Bool I10.7 eg Ichimney_leftOben IN Bool I11.0 eg Iwardrobe_rightUp IN Bool I11.1 eg Ibasement_corridorDown2 IN Bool I11.2 eg Ikitchenh_jal_up IN Bool I11.3 eg Ibath_left IN Bool I11.4 eg Ichimney_leftMitte IN Bool I11.5 eg Ibasement_corridorDown1 IN Bool I11.6 eg Ibath_right IN Bool I11.7 eg Ibasement_hobbyroom_east IN Bool I13.0 eg IGONG_outside IN Bool I12.5 eg Ibasement_serverroom IN Bool I12.7 eg Ibasement_hobbyroom_west IN Bool I12.0 eg AICorridor_humidity IN Word IW66 eg Opowerpoint_living OUT Bool Q6.0 eg Olight_dining_west OUT Bool Q6.1 eg Olight_corridor_east OUT Bool Q6.2 eg Ojalousie_kitchen_down OUT Bool Q6.3 eg Olight_bath_mirror OUT Bool Q6.4 eg Ojalousie_dining_west_down OUT Bool Q6.5 eg Olight_corridor_middle OUT Bool Q6.6 eg Olight_dining_ceiling OUT Bool Q6.7 eg Ojalousie_dining_south_down OUT Bool Q7.0 eg Olight_bath_ceiling OUT Bool Q7.1 eg Ojalousie_living_down OUT Bool Q8.0 eg Ojalousie_living_up OUT Bool Q8.1 eg Olight_living_south OUT Bool Q8.2 eg Olight_kitchen_ceiling OUT Bool Q8.3 eg Olight_kitchen_wallboard OUT Bool Q8.4 eg Ojalousie_kitchen_up OUT Bool Q8.5 eg Ojalousie_dining_south_up OUT Bool Q8.6 eg Opowerpoint_office OUT Bool Q8.7 eg Ojalousie_dining_west_up OUT Bool Q9.0 eg Ojalousie_office_up OUT Bool Q9.1 eg Ojalousie_office_down OUT Bool Q9.2 eg Olight_living_east_north OUT Bool Q9.3 eg Olight_kitchen_closet OUT Bool Q9.4 eg Olight_office_ceiling OUT Bool Q9.5 eg OGONG_pantry OUT Bool Q9.6 eg Opowerpoint_outside OUT Bool Q9.7 eg Oheater_living OUT Bool Q10.0 eg Oheater_entrance OUT Bool Q10.1 eg Olight_outside_west OUT Bool Q10.2 eg Olight_outside_door OUT Bool Q10.3 eg Oheater_office OUT Bool Q10.5 eg Opowerpoint_pantry OUT Bool Q10.7 eg Olight_outside_south OUT Bool Q11.0 eg Olight_basement_washroom OUT Bool Q11.1 eg Olight_basement_hobbyroomEast OUT Bool Q11.2 eg Oheater_kitchen OUT Bool Q11.3 eg Olight_basement_hobbyroomWest OUT Bool Q11.4 eg Oheater_dining OUT Bool Q11.5 eg Oheater_bath OUT Bool Q11.6 eg Olight_outside_east OUT Bool Q11.7 eg Olight_basement_storeroom OUT Bool Q13.0 eg Olight_basement_stairs OUT Bool Q13.1 eg Olight_basement_corridor OUT Bool Q13.2 eg Olight_basement_heater OUT Bool Q13.3 eg Olight_corridor_chimney_switch OUT Bool Q13.4 eg Olight_bath_switchLED OUT Bool Q13.5 eg Olight_living_east_south OUT Bool Q13.6 eg AIcorridor_temperature IN Word IW64 eg Oheater_basement_floor OUT Bool Q12.6 eg Oheater_basement_serverroom OUT Bool Q12.3 eg Oheater_basement_hobby_ost OUT Bool Q12.5 eg Oheater_basement_hobby_west OUT Bool Q12.4 eg Oheater_basement_washroom OUT Bool Q12.7 eg Ikitchenh_up IN Bool I9.5 eg Ikitchenh_down IN Bool I9.6 eg weather_temperatur sensor_remote Real ID100 eg weather_sun_south(klux) sensor_remote Int IW104 eg weather_sun_west(klux) sensor_remote Int IW106 eg weather_sun_east(klux) sensor_remote Int IW108 eg weather_light(lux) sensor_remote Int IW110 eg weather_wind(m/s) sensor_remote Real ID112 eg weather_rain sensor_remote Bool I116.0 eg Olight_outside_podium OUT Bool Q10.4 eg ETA_Kessel sensor_local Real MD150 eg ETA_Abgas sensor_local Real MD154 eg ETA_Pufferladezustand sensor_local Int MW158 eg ETA_Puffer_oben sensor_local Real MD160 eg ETA_Puffer_mitte sensor_local Real MD164 eg ETA_Puffer_unten sensor_local Real MD168 eg ETA_Kesselruecklauf sensor_local Real MD172 eg ETA_Kollektor sensor_local Real MD176 eg ETA_Boiler_unten_Solar sensor_local Real MD180 eg ETA_Aussentemperatur sensor_local Real MD184 eg ETA_Vorlauf sensor_local Real MD188 eg CH0_temperature_kitchen IN Word IW144 eg CH1_temperature_office IN Word IW146 eg CH2_ibs_temp IN Word IW148 eg CH3_ibs_temp IN Word IW150 eg Olight_living_ceiling_corner OUT Bool Q13.7 eg ETA_CMD_START sensor_local Bool M32.0 eg ETA_CMD_STOP sensor_local Bool M32.1 eg transfer_time_dbg cmd_status_flags Time MD140 eg PlcStates_notify_with_sound_enabled cmd_status_flags Bool M32.4 eg NodeRedPufferladezustand cmd_status_flags Word MW42 eg MI_diningWest_rightMiddle Standard-Variablentabelle Bool M6.0 eg MI_office_jal_down Standard-Variablentabelle Bool M6.1 eg MI_office_rightUp Standard-Variablentabelle Bool M6.2 eg MI_diningSouth_jal-living_down Standard-Variablentabelle Bool M6.3 eg MI_diningWest_rightUp Standard-Variablentabelle Bool M6.5 eg MI_office_jal_up Standard-Variablentabelle Bool M6.6 eg MI_diningSouth_rightUp Standard-Variablentabelle Bool M6.7 eg MI_diningSouth_rightMiddle Standard-Variablentabelle Bool M7.0 eg MI_office_left Standard-Variablentabelle Bool M7.1 eg MI_diningWest_leftUp Standard-Variablentabelle Bool M7.2 eg MI_diningSouth_jal_dining_up Standard-Variablentabelle Bool M7.3 eg MI_diningSouth_jal_dining_down Standard-Variablentabelle Bool M7.4 eg MI_office_right Standard-Variablentabelle Bool M7.5 eg MI_diningSouth_down Standard-Variablentabelle Bool M8.0 eg MI_diningWest_leftDown Standard-Variablentabelle Bool M8.1 eg MI_diningSouth_jal_living_up Standard-Variablentabelle Bool M8.2 eg MI_diningSouth_leftMiddle Standard-Variablentabelle Bool M8.3 eg MI_chimney_rightUp Standard-Variablentabelle Bool M8.4 eg MI_kitchens_leftUp Standard-Variablentabelle Bool M8.5 eg MI_wardrobe_leftUp Standard-Variablentabelle Bool M8.6 eg MI_chimney_rightMiddle Standard-Variablentabelle Bool M8.7 eg MI_office_rightDown Standard-Variablentabelle Bool M9.0 eg MI_diningSouth_leftUp Standard-Variablentabelle Bool M9.1 eg MI_diningWest_leftMiddle Standard-Variablentabelle Bool M9.2 eg MI_diningWest_rightDown Standard-Variablentabelle Bool M9.3 eg MI_kitchens_leftDown Standard-Variablentabelle Bool M9.4 eg MI_kitchenh_up Standard-Variablentabelle Bool M9.5 eg MI_kitchenh_down Standard-Variablentabelle Bool M9.6 eg MI_kitchens_rigthUp Standard-Variablentabelle Bool M9.7 eg MI_kitchenh_jal_down Standard-Variablentabelle Bool M10.0 eg MI_kitchens_rightDown Standard-Variablentabelle Bool M10.1 eg MI_basement_heater Standard-Variablentabelle Bool M10.2 eg MI_chimney_leftDown Standard-Variablentabelle Bool M10.3 eg MI_wardrobe_leftDown Standard-Variablentabelle Bool M10.4 eg MI_basement_washroom Standard-Variablentabelle Bool M10.5 eg MI_wardrobe_rightDown Standard-Variablentabelle Bool M10.6 eg MI_basement_corridorUp Standard-Variablentabelle Bool M10.7 eg MI_chimney_leftOben Standard-Variablentabelle Bool M11.0 eg MI_wardrobe_rightUp Standard-Variablentabelle Bool M11.1 eg MI_basement_corridorDown2 Standard-Variablentabelle Bool M11.2 eg MI_kitchenh_jal_up Standard-Variablentabelle Bool M11.3 eg MI_bath_left Standard-Variablentabelle Bool M11.4 eg MI_chimney_leftMitte Standard-Variablentabelle Bool M11.5 eg MI_basement_corridorDown1 Standard-Variablentabelle Bool M11.6 eg MI_bath_right Standard-Variablentabelle Bool M11.7 eg MI_basement_hobbyroom_west Standard-Variablentabelle Bool M12.0 eg MI_GONG_outside Standard-Variablentabelle Bool M12.5 eg MI_basement_serverroom Standard-Variablentabelle Bool M12.7 eg MI_basement_hobbyroom_east Standard-Variablentabelle Bool M13.0","title":"plc tag eg"},{"location":"mds/plcVarToDB_eg/#tag-table-plc-variables-eg","text":"plcName name Path Data Type LogicalAddress eg IdiningWest_rightMiddle IN Bool I6.0 eg Ioffice_jal_down IN Bool I6.1 eg Ioffice_rightUp IN Bool I6.2 eg IdiningSouth_jal-living_down IN Bool I6.3 eg IdiningWest_rightUp IN Bool I6.5 eg Ioffice_jal_up IN Bool I6.6 eg IdiningSouth_rightUp IN Bool I6.7 eg IdiningSouth_rightMiddle IN Bool I7.0 eg Ioffice_left IN Bool I7.1 eg IdiningWest_leftUp IN Bool I7.2 eg IdiningSouth_jal_dining_up IN Bool I7.3 eg IdiningSouth_jal_dining_down IN Bool I7.4 eg Ioffice_right IN Bool I7.5 eg IdiningSouth_down IN Bool I8.0 eg IdiningWest_leftDown IN Bool I8.1 eg IdiningSouth_jal_living_up IN Bool I8.2 eg IdiningSouth_leftMiddle IN Bool I8.3 eg Ichimney_rightUp IN Bool I8.4 eg Ikitchens_leftUp IN Bool I8.5 eg Iwardrobe_leftUp IN Bool I8.6 eg Ichimney_rightMiddle IN Bool I8.7 eg Ioffice_rightDown IN Bool I9.0 eg IdiningSouth_leftUp IN Bool I9.1 eg IdiningWest_leftMiddle IN Bool I9.2 eg IdiningWest_rightDown IN Bool I9.3 eg Ikitchens_leftDown IN Bool I9.4 eg Ikitchens_rigthUp IN Bool I9.7 eg Ikitchenh_jal_down IN Bool I10.0 eg Ikitchens_rightDown IN Bool I10.1 eg Ibasement_heater IN Bool I10.2 eg Ichimney_leftDown IN Bool I10.3 eg Iwardrobe_leftDown IN Bool I10.4 eg Ibasement_washroom IN Bool I10.5 eg Iwardrobe_rightDown IN Bool I10.6 eg Ibasement_corridorUp IN Bool I10.7 eg Ichimney_leftOben IN Bool I11.0 eg Iwardrobe_rightUp IN Bool I11.1 eg Ibasement_corridorDown2 IN Bool I11.2 eg Ikitchenh_jal_up IN Bool I11.3 eg Ibath_left IN Bool I11.4 eg Ichimney_leftMitte IN Bool I11.5 eg Ibasement_corridorDown1 IN Bool I11.6 eg Ibath_right IN Bool I11.7 eg Ibasement_hobbyroom_east IN Bool I13.0 eg IGONG_outside IN Bool I12.5 eg Ibasement_serverroom IN Bool I12.7 eg Ibasement_hobbyroom_west IN Bool I12.0 eg AICorridor_humidity IN Word IW66 eg Opowerpoint_living OUT Bool Q6.0 eg Olight_dining_west OUT Bool Q6.1 eg Olight_corridor_east OUT Bool Q6.2 eg Ojalousie_kitchen_down OUT Bool Q6.3 eg Olight_bath_mirror OUT Bool Q6.4 eg Ojalousie_dining_west_down OUT Bool Q6.5 eg Olight_corridor_middle OUT Bool Q6.6 eg Olight_dining_ceiling OUT Bool Q6.7 eg Ojalousie_dining_south_down OUT Bool Q7.0 eg Olight_bath_ceiling OUT Bool Q7.1 eg Ojalousie_living_down OUT Bool Q8.0 eg Ojalousie_living_up OUT Bool Q8.1 eg Olight_living_south OUT Bool Q8.2 eg Olight_kitchen_ceiling OUT Bool Q8.3 eg Olight_kitchen_wallboard OUT Bool Q8.4 eg Ojalousie_kitchen_up OUT Bool Q8.5 eg Ojalousie_dining_south_up OUT Bool Q8.6 eg Opowerpoint_office OUT Bool Q8.7 eg Ojalousie_dining_west_up OUT Bool Q9.0 eg Ojalousie_office_up OUT Bool Q9.1 eg Ojalousie_office_down OUT Bool Q9.2 eg Olight_living_east_north OUT Bool Q9.3 eg Olight_kitchen_closet OUT Bool Q9.4 eg Olight_office_ceiling OUT Bool Q9.5 eg OGONG_pantry OUT Bool Q9.6 eg Opowerpoint_outside OUT Bool Q9.7 eg Oheater_living OUT Bool Q10.0 eg Oheater_entrance OUT Bool Q10.1 eg Olight_outside_west OUT Bool Q10.2 eg Olight_outside_door OUT Bool Q10.3 eg Oheater_office OUT Bool Q10.5 eg Opowerpoint_pantry OUT Bool Q10.7 eg Olight_outside_south OUT Bool Q11.0 eg Olight_basement_washroom OUT Bool Q11.1 eg Olight_basement_hobbyroomEast OUT Bool Q11.2 eg Oheater_kitchen OUT Bool Q11.3 eg Olight_basement_hobbyroomWest OUT Bool Q11.4 eg Oheater_dining OUT Bool Q11.5 eg Oheater_bath OUT Bool Q11.6 eg Olight_outside_east OUT Bool Q11.7 eg Olight_basement_storeroom OUT Bool Q13.0 eg Olight_basement_stairs OUT Bool Q13.1 eg Olight_basement_corridor OUT Bool Q13.2 eg Olight_basement_heater OUT Bool Q13.3 eg Olight_corridor_chimney_switch OUT Bool Q13.4 eg Olight_bath_switchLED OUT Bool Q13.5 eg Olight_living_east_south OUT Bool Q13.6 eg AIcorridor_temperature IN Word IW64 eg Oheater_basement_floor OUT Bool Q12.6 eg Oheater_basement_serverroom OUT Bool Q12.3 eg Oheater_basement_hobby_ost OUT Bool Q12.5 eg Oheater_basement_hobby_west OUT Bool Q12.4 eg Oheater_basement_washroom OUT Bool Q12.7 eg Ikitchenh_up IN Bool I9.5 eg Ikitchenh_down IN Bool I9.6 eg weather_temperatur sensor_remote Real ID100 eg weather_sun_south(klux) sensor_remote Int IW104 eg weather_sun_west(klux) sensor_remote Int IW106 eg weather_sun_east(klux) sensor_remote Int IW108 eg weather_light(lux) sensor_remote Int IW110 eg weather_wind(m/s) sensor_remote Real ID112 eg weather_rain sensor_remote Bool I116.0 eg Olight_outside_podium OUT Bool Q10.4 eg ETA_Kessel sensor_local Real MD150 eg ETA_Abgas sensor_local Real MD154 eg ETA_Pufferladezustand sensor_local Int MW158 eg ETA_Puffer_oben sensor_local Real MD160 eg ETA_Puffer_mitte sensor_local Real MD164 eg ETA_Puffer_unten sensor_local Real MD168 eg ETA_Kesselruecklauf sensor_local Real MD172 eg ETA_Kollektor sensor_local Real MD176 eg ETA_Boiler_unten_Solar sensor_local Real MD180 eg ETA_Aussentemperatur sensor_local Real MD184 eg ETA_Vorlauf sensor_local Real MD188 eg CH0_temperature_kitchen IN Word IW144 eg CH1_temperature_office IN Word IW146 eg CH2_ibs_temp IN Word IW148 eg CH3_ibs_temp IN Word IW150 eg Olight_living_ceiling_corner OUT Bool Q13.7 eg ETA_CMD_START sensor_local Bool M32.0 eg ETA_CMD_STOP sensor_local Bool M32.1 eg transfer_time_dbg cmd_status_flags Time MD140 eg PlcStates_notify_with_sound_enabled cmd_status_flags Bool M32.4 eg NodeRedPufferladezustand cmd_status_flags Word MW42 eg MI_diningWest_rightMiddle Standard-Variablentabelle Bool M6.0 eg MI_office_jal_down Standard-Variablentabelle Bool M6.1 eg MI_office_rightUp Standard-Variablentabelle Bool M6.2 eg MI_diningSouth_jal-living_down Standard-Variablentabelle Bool M6.3 eg MI_diningWest_rightUp Standard-Variablentabelle Bool M6.5 eg MI_office_jal_up Standard-Variablentabelle Bool M6.6 eg MI_diningSouth_rightUp Standard-Variablentabelle Bool M6.7 eg MI_diningSouth_rightMiddle Standard-Variablentabelle Bool M7.0 eg MI_office_left Standard-Variablentabelle Bool M7.1 eg MI_diningWest_leftUp Standard-Variablentabelle Bool M7.2 eg MI_diningSouth_jal_dining_up Standard-Variablentabelle Bool M7.3 eg MI_diningSouth_jal_dining_down Standard-Variablentabelle Bool M7.4 eg MI_office_right Standard-Variablentabelle Bool M7.5 eg MI_diningSouth_down Standard-Variablentabelle Bool M8.0 eg MI_diningWest_leftDown Standard-Variablentabelle Bool M8.1 eg MI_diningSouth_jal_living_up Standard-Variablentabelle Bool M8.2 eg MI_diningSouth_leftMiddle Standard-Variablentabelle Bool M8.3 eg MI_chimney_rightUp Standard-Variablentabelle Bool M8.4 eg MI_kitchens_leftUp Standard-Variablentabelle Bool M8.5 eg MI_wardrobe_leftUp Standard-Variablentabelle Bool M8.6 eg MI_chimney_rightMiddle Standard-Variablentabelle Bool M8.7 eg MI_office_rightDown Standard-Variablentabelle Bool M9.0 eg MI_diningSouth_leftUp Standard-Variablentabelle Bool M9.1 eg MI_diningWest_leftMiddle Standard-Variablentabelle Bool M9.2 eg MI_diningWest_rightDown Standard-Variablentabelle Bool M9.3 eg MI_kitchens_leftDown Standard-Variablentabelle Bool M9.4 eg MI_kitchenh_up Standard-Variablentabelle Bool M9.5 eg MI_kitchenh_down Standard-Variablentabelle Bool M9.6 eg MI_kitchens_rigthUp Standard-Variablentabelle Bool M9.7 eg MI_kitchenh_jal_down Standard-Variablentabelle Bool M10.0 eg MI_kitchens_rightDown Standard-Variablentabelle Bool M10.1 eg MI_basement_heater Standard-Variablentabelle Bool M10.2 eg MI_chimney_leftDown Standard-Variablentabelle Bool M10.3 eg MI_wardrobe_leftDown Standard-Variablentabelle Bool M10.4 eg MI_basement_washroom Standard-Variablentabelle Bool M10.5 eg MI_wardrobe_rightDown Standard-Variablentabelle Bool M10.6 eg MI_basement_corridorUp Standard-Variablentabelle Bool M10.7 eg MI_chimney_leftOben Standard-Variablentabelle Bool M11.0 eg MI_wardrobe_rightUp Standard-Variablentabelle Bool M11.1 eg MI_basement_corridorDown2 Standard-Variablentabelle Bool M11.2 eg MI_kitchenh_jal_up Standard-Variablentabelle Bool M11.3 eg MI_bath_left Standard-Variablentabelle Bool M11.4 eg MI_chimney_leftMitte Standard-Variablentabelle Bool M11.5 eg MI_basement_corridorDown1 Standard-Variablentabelle Bool M11.6 eg MI_bath_right Standard-Variablentabelle Bool M11.7 eg MI_basement_hobbyroom_west Standard-Variablentabelle Bool M12.0 eg MI_GONG_outside Standard-Variablentabelle Bool M12.5 eg MI_basement_serverroom Standard-Variablentabelle Bool M12.7 eg MI_basement_hobbyroom_east Standard-Variablentabelle Bool M13.0","title":"tag table PLC variables: eg"},{"location":"mds/plcVarToDB_og/","text":"tag table PLC variables: og \u00b6 plcName name Path Data Type LogicalAddress og IchildEast_jalousieO_up IN Bool I2.5 og IchildEast_jalousieO_down IN Bool I2.6 og IchildEast_jalousieS_up IN Bool I2.7 og IchildEast_jalousieS_down IN Bool I3.0 og IchildEast_licht_decke IN Bool I3.1 og IchildEast_licht_galerie IN Bool I3.2 og IchildWest_jalousieW_up IN Bool I3.4 og IchildWest_jalousieW_down IN Bool I3.7 og IchildWest_jalousieS_up IN Bool I3.6 og IchildWest_jalousieS_down IN Bool I3.5 og IchildWest_licht_decke IN Bool I4.0 og IchildWest_licht_galerie IN Bool I4.1 og Ibathsp_leftDown IN Bool I1.1 og Ibathsp_rightDown IN Bool I1.2 og Ibathsp_leftUp IN Bool I1.3 og Icorridor_jalousie_up IN Bool I4.3 og Icorridor_jalousie_down IN Bool I4.4 og Icorridor_lightUp IN Bool I4.5 og Icorridor_lightDown_UNUSED IN Bool I4.6 og Iparents_door_leftDown IN Bool I0.0 og Iparents_door_rightDown IN Bool I0.2 og Iparents_door_rightUp_bedMiddle IN Bool I0.1 og Iparents_door_rightMiddle_eastLeft IN Bool I0.4 og Iparents_door_leftMiddle_westMiddle IN Bool I0.3 og Iparents_door_leftUp IN Bool I0.5 og Iparents_westRight IN Bool I0.6 og Iparents_eastRight IN Bool I0.7 og Ibathsp_rightUp IN Bool I1.4 og Ibathsp_leftMiddle IN Bool I1.5 og Ibathsp_rightMiddle IN Bool I2.0 og IbathCorridor_right IN Bool I2.1 og IbathCorridor_left IN Bool I2.2 og Idetector_corridor_north IN Bool I5.1 og AI_corridor_LUX IN Word IW64 og AI_corridor_temp IN Word IW66 og Idetector_stairs_ceiling IN Bool I5.2 og Ojalousie_parents_up OUT Bool Q5.4 og Ojalousie_parents_down OUT Bool Q2.5 og Ojalousie_bath_up OUT Bool Q3.5 og Ojalousie_bath_down OUT Bool Q2.3 og Ojalousie_childEast_east_up OUT Bool Q3.4 og Ojalousie_childEast_east_down OUT Bool Q3.3 og Ojalousie_childEast_south_up OUT Bool Q5.3 og Ojalousie_childEast_south_down OUT Bool Q3.7 og Ojalousie_childWest_west_up OUT Bool Q3.1 og Ojalousie_childWest_west_down OUT Bool Q3.0 og Ojalousie_childWest_south_up OUT Bool Q2.1 og Ojalousie_childWest_south_down OUT Bool Q2.0 og Ojalousie_corridor_up OUT Bool Q2.2 og Ojalousie_corridor_down OUT Bool Q3.6 og Olight_corridor_middle OUT Bool Q0.3 og Opowerpoint_parents OUT Bool Q2.6 og Opowerpoint_bath OUT Bool Q3.2 og Opowerpoint_childEast OUT Bool Q5.0 og Opowerpoint_childWest OUT Bool Q2.7 og Opowerpoint_corridor OUT Bool Q2.4 og Olight_parents_ceiling OUT Bool Q4.3 og Olight_parents_east(carmen)--NOT_USED_AT_CURRENT OUT Bool Q4.4 og Olight_parents_bed OUT Bool Q1.0 og Olight_bath_ceiling OUT Bool Q1.1 og Olight_bath_mirror OUT Bool Q4.1 og Olight_bath_bathtub OUT Bool Q4.0 og Olight_bath_shower OUT Bool Q0.7 og Olight_childEast_ceiling OUT Bool Q0.6 og Olight_childEast_gallery OUT Bool Q0.5 og Olight_childWest_ceiling OUT Bool Q0.4 og Olight_childWest_gallery OUT Bool Q0.1 og Olight_corridor_south OUT Bool Q0.0 og Olight_stairs_west OUT Bool Q0.2 og Olight_stairs_east OUT Bool Q4.2 og Oheater_parents OUT Bool Q5.7 og Oheater_bath_floor OUT Bool Q5.1 og Oheater_bath_wall OUT Bool Q5.6 og Oheater_childEast OUT Bool Q5.2 og Oheater_childWest OUT Bool Q5.5 og Olight_bath_switch--NOT_USED_AT_CURRENT OUT Bool Q4.5 og modbus_temperatur(\u00b0C) merker Word MW10 og modbus_sun_south(klux) merker Word MW12 og modbus_sun_west(klux) merker Word MW14 og modbus_sun_east(klux) merker Word MW16 og modbus_light(lux) merker Word MW18 og modbus_wind(m/s) merker Word MW20 og modbus_rain merker Word MW22 og weather_temperatur transfer Real QD100 og weather_sun_south(klux) transfer Int QW104 og weather_sun_west(klux) transfer Int QW106 og weather_sun_east(klux) transfer Int QW108 og weather_light(lux) transfer Int QW110 og weather_wind(m/s) transfer Real QD112 og weather_rain transfer Bool Q116.0 og sense_lux_stairs_og transfer Int QW118 og sense_temperature_stairs_og transfer Real QD120 og sense_temperature_floor_ug transfer Real ID100 og sense_humidity_floor_ug transfer Real ID104 og CH1_temperature_bath IN Word IW128 og temperature_bath_og_CH1 merker Int MW24 og temperature_child_east_CH2 merker Int MW26 og temperature_child_west_CH3 merker Int MW28 og temperature_DistributionBoxOg_CH4 merker Int MW30 og CH2_temperature_child_east IN Word IW130 og CH3_temperature_child_west IN Word IW132 og CH4_temperature_DistributionBoxOg IN Word IW134 og MI_parents_door_leftDown Standard-Variablentabelle Bool M0.0 og MI_parents_door_rightUp_bedMiddle Standard-Variablentabelle Bool M0.1 og MI_parents_door_rightDown Standard-Variablentabelle Bool M0.2 og MI_parents_door_leftMiddle_westMiddle Standard-Variablentabelle Bool M0.3 og MI_parents_door_rightMiddle_eastLeft Standard-Variablentabelle Bool M0.4 og MI_parents_door_leftUp Standard-Variablentabelle Bool M0.5 og MI_parents_westRight Standard-Variablentabelle Bool M0.6 og MI_parents_eastRight Standard-Variablentabelle Bool M0.7 og MI_bathsp_leftDown Standard-Variablentabelle Bool M1.1 og MI_bathsp_rightDown Standard-Variablentabelle Bool M1.2 og MI_bathsp_leftUp Standard-Variablentabelle Bool M1.3 og MI_bathsp_rightUp Standard-Variablentabelle Bool M1.4 og MI_bathsp_leftMiddle Standard-Variablentabelle Bool M1.5 og MI_bathsp_rightMiddle Standard-Variablentabelle Bool M2.0 og MI_bathCorridor_right Standard-Variablentabelle Bool M2.1 og MI_bathCorridor_left Standard-Variablentabelle Bool M2.2 og MI_childEast_jalousieO_up Standard-Variablentabelle Bool M2.5 og MI_childEast_jalousieO_down Standard-Variablentabelle Bool M2.6 og MI_childEast_jalousieS_up Standard-Variablentabelle Bool M2.7 og MI_childEast_jalousieS_down Standard-Variablentabelle Bool M3.0 og MI_childEast_licht_decke Standard-Variablentabelle Bool M3.1 og MI_childEast_licht_galerie Standard-Variablentabelle Bool M3.2 og MI_childWest_jalousieW_up Standard-Variablentabelle Bool M3.4 og MI_childWest_jalousieS_down Standard-Variablentabelle Bool M3.5 og MI_childWest_jalousieS_up Standard-Variablentabelle Bool M3.6 og MI_childWest_jalousieW_down Standard-Variablentabelle Bool M3.7 og MI_childWest_licht_decke Standard-Variablentabelle Bool M4.0 og MI_childWest_licht_galerie Standard-Variablentabelle Bool M4.1 og MI_corridor_jalousie_up Standard-Variablentabelle Bool M4.3 og MI_corridor_jalousie_down Standard-Variablentabelle Bool M4.4 og MI_corridor_lightUp Standard-Variablentabelle Bool M4.5 og MI_corridor_lightDown_UNUSED Standard-Variablentabelle Bool M4.6 og MI_detector_corridor_north Standard-Variablentabelle Bool M5.1 og MI_detector_stairs_ceiling Standard-Variablentabelle Bool M5.2","title":"plc tag og"},{"location":"mds/plcVarToDB_og/#tag-table-plc-variables-og","text":"plcName name Path Data Type LogicalAddress og IchildEast_jalousieO_up IN Bool I2.5 og IchildEast_jalousieO_down IN Bool I2.6 og IchildEast_jalousieS_up IN Bool I2.7 og IchildEast_jalousieS_down IN Bool I3.0 og IchildEast_licht_decke IN Bool I3.1 og IchildEast_licht_galerie IN Bool I3.2 og IchildWest_jalousieW_up IN Bool I3.4 og IchildWest_jalousieW_down IN Bool I3.7 og IchildWest_jalousieS_up IN Bool I3.6 og IchildWest_jalousieS_down IN Bool I3.5 og IchildWest_licht_decke IN Bool I4.0 og IchildWest_licht_galerie IN Bool I4.1 og Ibathsp_leftDown IN Bool I1.1 og Ibathsp_rightDown IN Bool I1.2 og Ibathsp_leftUp IN Bool I1.3 og Icorridor_jalousie_up IN Bool I4.3 og Icorridor_jalousie_down IN Bool I4.4 og Icorridor_lightUp IN Bool I4.5 og Icorridor_lightDown_UNUSED IN Bool I4.6 og Iparents_door_leftDown IN Bool I0.0 og Iparents_door_rightDown IN Bool I0.2 og Iparents_door_rightUp_bedMiddle IN Bool I0.1 og Iparents_door_rightMiddle_eastLeft IN Bool I0.4 og Iparents_door_leftMiddle_westMiddle IN Bool I0.3 og Iparents_door_leftUp IN Bool I0.5 og Iparents_westRight IN Bool I0.6 og Iparents_eastRight IN Bool I0.7 og Ibathsp_rightUp IN Bool I1.4 og Ibathsp_leftMiddle IN Bool I1.5 og Ibathsp_rightMiddle IN Bool I2.0 og IbathCorridor_right IN Bool I2.1 og IbathCorridor_left IN Bool I2.2 og Idetector_corridor_north IN Bool I5.1 og AI_corridor_LUX IN Word IW64 og AI_corridor_temp IN Word IW66 og Idetector_stairs_ceiling IN Bool I5.2 og Ojalousie_parents_up OUT Bool Q5.4 og Ojalousie_parents_down OUT Bool Q2.5 og Ojalousie_bath_up OUT Bool Q3.5 og Ojalousie_bath_down OUT Bool Q2.3 og Ojalousie_childEast_east_up OUT Bool Q3.4 og Ojalousie_childEast_east_down OUT Bool Q3.3 og Ojalousie_childEast_south_up OUT Bool Q5.3 og Ojalousie_childEast_south_down OUT Bool Q3.7 og Ojalousie_childWest_west_up OUT Bool Q3.1 og Ojalousie_childWest_west_down OUT Bool Q3.0 og Ojalousie_childWest_south_up OUT Bool Q2.1 og Ojalousie_childWest_south_down OUT Bool Q2.0 og Ojalousie_corridor_up OUT Bool Q2.2 og Ojalousie_corridor_down OUT Bool Q3.6 og Olight_corridor_middle OUT Bool Q0.3 og Opowerpoint_parents OUT Bool Q2.6 og Opowerpoint_bath OUT Bool Q3.2 og Opowerpoint_childEast OUT Bool Q5.0 og Opowerpoint_childWest OUT Bool Q2.7 og Opowerpoint_corridor OUT Bool Q2.4 og Olight_parents_ceiling OUT Bool Q4.3 og Olight_parents_east(carmen)--NOT_USED_AT_CURRENT OUT Bool Q4.4 og Olight_parents_bed OUT Bool Q1.0 og Olight_bath_ceiling OUT Bool Q1.1 og Olight_bath_mirror OUT Bool Q4.1 og Olight_bath_bathtub OUT Bool Q4.0 og Olight_bath_shower OUT Bool Q0.7 og Olight_childEast_ceiling OUT Bool Q0.6 og Olight_childEast_gallery OUT Bool Q0.5 og Olight_childWest_ceiling OUT Bool Q0.4 og Olight_childWest_gallery OUT Bool Q0.1 og Olight_corridor_south OUT Bool Q0.0 og Olight_stairs_west OUT Bool Q0.2 og Olight_stairs_east OUT Bool Q4.2 og Oheater_parents OUT Bool Q5.7 og Oheater_bath_floor OUT Bool Q5.1 og Oheater_bath_wall OUT Bool Q5.6 og Oheater_childEast OUT Bool Q5.2 og Oheater_childWest OUT Bool Q5.5 og Olight_bath_switch--NOT_USED_AT_CURRENT OUT Bool Q4.5 og modbus_temperatur(\u00b0C) merker Word MW10 og modbus_sun_south(klux) merker Word MW12 og modbus_sun_west(klux) merker Word MW14 og modbus_sun_east(klux) merker Word MW16 og modbus_light(lux) merker Word MW18 og modbus_wind(m/s) merker Word MW20 og modbus_rain merker Word MW22 og weather_temperatur transfer Real QD100 og weather_sun_south(klux) transfer Int QW104 og weather_sun_west(klux) transfer Int QW106 og weather_sun_east(klux) transfer Int QW108 og weather_light(lux) transfer Int QW110 og weather_wind(m/s) transfer Real QD112 og weather_rain transfer Bool Q116.0 og sense_lux_stairs_og transfer Int QW118 og sense_temperature_stairs_og transfer Real QD120 og sense_temperature_floor_ug transfer Real ID100 og sense_humidity_floor_ug transfer Real ID104 og CH1_temperature_bath IN Word IW128 og temperature_bath_og_CH1 merker Int MW24 og temperature_child_east_CH2 merker Int MW26 og temperature_child_west_CH3 merker Int MW28 og temperature_DistributionBoxOg_CH4 merker Int MW30 og CH2_temperature_child_east IN Word IW130 og CH3_temperature_child_west IN Word IW132 og CH4_temperature_DistributionBoxOg IN Word IW134 og MI_parents_door_leftDown Standard-Variablentabelle Bool M0.0 og MI_parents_door_rightUp_bedMiddle Standard-Variablentabelle Bool M0.1 og MI_parents_door_rightDown Standard-Variablentabelle Bool M0.2 og MI_parents_door_leftMiddle_westMiddle Standard-Variablentabelle Bool M0.3 og MI_parents_door_rightMiddle_eastLeft Standard-Variablentabelle Bool M0.4 og MI_parents_door_leftUp Standard-Variablentabelle Bool M0.5 og MI_parents_westRight Standard-Variablentabelle Bool M0.6 og MI_parents_eastRight Standard-Variablentabelle Bool M0.7 og MI_bathsp_leftDown Standard-Variablentabelle Bool M1.1 og MI_bathsp_rightDown Standard-Variablentabelle Bool M1.2 og MI_bathsp_leftUp Standard-Variablentabelle Bool M1.3 og MI_bathsp_rightUp Standard-Variablentabelle Bool M1.4 og MI_bathsp_leftMiddle Standard-Variablentabelle Bool M1.5 og MI_bathsp_rightMiddle Standard-Variablentabelle Bool M2.0 og MI_bathCorridor_right Standard-Variablentabelle Bool M2.1 og MI_bathCorridor_left Standard-Variablentabelle Bool M2.2 og MI_childEast_jalousieO_up Standard-Variablentabelle Bool M2.5 og MI_childEast_jalousieO_down Standard-Variablentabelle Bool M2.6 og MI_childEast_jalousieS_up Standard-Variablentabelle Bool M2.7 og MI_childEast_jalousieS_down Standard-Variablentabelle Bool M3.0 og MI_childEast_licht_decke Standard-Variablentabelle Bool M3.1 og MI_childEast_licht_galerie Standard-Variablentabelle Bool M3.2 og MI_childWest_jalousieW_up Standard-Variablentabelle Bool M3.4 og MI_childWest_jalousieS_down Standard-Variablentabelle Bool M3.5 og MI_childWest_jalousieS_up Standard-Variablentabelle Bool M3.6 og MI_childWest_jalousieW_down Standard-Variablentabelle Bool M3.7 og MI_childWest_licht_decke Standard-Variablentabelle Bool M4.0 og MI_childWest_licht_galerie Standard-Variablentabelle Bool M4.1 og MI_corridor_jalousie_up Standard-Variablentabelle Bool M4.3 og MI_corridor_jalousie_down Standard-Variablentabelle Bool M4.4 og MI_corridor_lightUp Standard-Variablentabelle Bool M4.5 og MI_corridor_lightDown_UNUSED Standard-Variablentabelle Bool M4.6 og MI_detector_corridor_north Standard-Variablentabelle Bool M5.1 og MI_detector_stairs_ceiling Standard-Variablentabelle Bool M5.2","title":"tag table PLC variables: og"},{"location":"mds/plc_lib_interface/","text":"plc FB lib \u00b6 TODO or to be removed... aktor light \u00b6 udp interface -|-|- logic interface -|-|-","title":"plc lib"},{"location":"mds/plc_lib_interface/#plc-fb-lib","text":"TODO or to be removed...","title":"plc FB lib"},{"location":"mds/plc_lib_interface/#aktor-light","text":"udp interface -|-|- logic interface -|-|-","title":"aktor light"},{"location":"mds/switch_cabinet/","text":"switch_cabinet \u00b6 OG 24V \u00b6 klemme Kabel color OKZ desc addr row three int 1 red 2 middle red 3","title":"switch_cabinet"},{"location":"mds/switch_cabinet/#switch_cabinet","text":"","title":"switch_cabinet"},{"location":"mds/switch_cabinet/#og-24v","text":"klemme Kabel color OKZ desc addr row three int 1 red 2 middle red 3","title":"OG 24V"},{"location":"mds/topics_node/","text":"topics \u00b6 overview \u00b6 This is an overview of the communication protocol of the different network components. Where possible, the participants communicate via mqtt. For the modules which have not (yet) implemented a mqtt client I have nevertheless oriented myself to the protocol. This means that each message consists of a topic and the actual content . device-type device-value plc eg, og, car, esp basement, carport, .. netatmo base, outside, rain rpi3 self, media_eg, media_bath, media_hall component-type component-value description dl weather, sensor, aktor data logger events status error, self, ... i sensor_name, e.g. light_barrier, motion_sensor input values o aktor_name, e.g. light_bath_ceiling output values get global device values, e.g. get_all get from device set global device cmd, e.g. set_verbose set to device logging at DB \u00b6 All topics containing /status/log will be stored at table node_status_log v01/netatmo/base/status/log v01/netatmo/outdoor/status/log v01/netatmo/rain/status/log v01/rpi/4/status/log v01/rpi/OG_floor/status/log v01/rpi/EG_living/status/log v01/rpi/OG_bath/status/log general structure of messages \u00b6 version device-type device-value component-type component-value example msg v01 plc eg dl eta v01 plc eg pd eta v01 plc eg status error v01 esp basement i pir1 v01 esp basement dl pir1 plc -> node_red \u00b6 plc function NodeSend___send() add prefix to topic v01/plc/ device-value is added from node_red while receiving (from IP address) example v01/plc/og/o/light/stairs_west v01/plc/eg/i/NodeDiFlag component-type component-value message description pd eta values of ProzessData all pd components are filtert from node_log status error name + value description of error status => use FC NodeSend_status/error dl eta values maybe redundant to pd/eta ==> current deactivated at PLC o heater/bath i [input name] {switches:value} plc detected input change (button, pir sensor, and so on...) i cmd_local [cmd name] cmd from local input i cmd_remote [cmd name] cmd from remote plc input node_red -> plc \u00b6 iot -> node_red \u00b6 node_red -> iot \u00b6","title":"Node topics"},{"location":"mds/topics_node/#topics","text":"","title":"topics"},{"location":"mds/topics_node/#overview","text":"This is an overview of the communication protocol of the different network components. Where possible, the participants communicate via mqtt. For the modules which have not (yet) implemented a mqtt client I have nevertheless oriented myself to the protocol. This means that each message consists of a topic and the actual content . device-type device-value plc eg, og, car, esp basement, carport, .. netatmo base, outside, rain rpi3 self, media_eg, media_bath, media_hall component-type component-value description dl weather, sensor, aktor data logger events status error, self, ... i sensor_name, e.g. light_barrier, motion_sensor input values o aktor_name, e.g. light_bath_ceiling output values get global device values, e.g. get_all get from device set global device cmd, e.g. set_verbose set to device","title":"overview"},{"location":"mds/topics_node/#logging-at-db","text":"All topics containing /status/log will be stored at table node_status_log v01/netatmo/base/status/log v01/netatmo/outdoor/status/log v01/netatmo/rain/status/log v01/rpi/4/status/log v01/rpi/OG_floor/status/log v01/rpi/EG_living/status/log v01/rpi/OG_bath/status/log","title":"logging at DB"},{"location":"mds/topics_node/#general-structure-of-messages","text":"version device-type device-value component-type component-value example msg v01 plc eg dl eta v01 plc eg pd eta v01 plc eg status error v01 esp basement i pir1 v01 esp basement dl pir1","title":"general structure of messages"},{"location":"mds/topics_node/#plc-node_red","text":"plc function NodeSend___send() add prefix to topic v01/plc/ device-value is added from node_red while receiving (from IP address) example v01/plc/og/o/light/stairs_west v01/plc/eg/i/NodeDiFlag component-type component-value message description pd eta values of ProzessData all pd components are filtert from node_log status error name + value description of error status => use FC NodeSend_status/error dl eta values maybe redundant to pd/eta ==> current deactivated at PLC o heater/bath i [input name] {switches:value} plc detected input change (button, pir sensor, and so on...) i cmd_local [cmd name] cmd from local input i cmd_remote [cmd name] cmd from remote plc input","title":"plc -&gt; node_red"},{"location":"mds/topics_node/#node_red-plc","text":"","title":"node_red -&gt; plc"},{"location":"mds/topics_node/#iot-node_red","text":"","title":"iot -&gt; node_red"},{"location":"mds/topics_node/#node_red-iot","text":"","title":"node_red -&gt; iot"},{"location":"multiroom/my_multiroom/","text":"The multiroom setup \u00b6 For my multiroom system I used Raspberry PI's, a Russound amplifier and Dali speakers. As \"remote control\" should work every device (PC/Tablet/Smartphone) with a UPNP client/App. In my central solution I have laid all the speaker cables from the different rooms to the network cabinet. With later implementation, a decentralized solution would also be possible. In case of LAN and power supply the Raspberry and the amplifier could disappear in the wall/ceiling next to the speaker. Here you see the network cabinet with tree raspberrys as media-player and the amplifier. Media-player \u00b6 As in (almost) every modern household, no Raspberry PI should be missing. On the Raspberry there is a digital/analog converter from hifiberry.com plugged in, which feeds its signal into the amplifier. As media player software I use piCorePlayer which is a tiny core linux distribution running entirely in RAM. For remote controll for the Logitech Media Server I use the app squeezer. It supports my Spotify account I can listen from my (local stored at synology NAS) own music collection I can choose from internet radio stations In the app I can select in which zone the music is played And I can manage the playlist and synchronize the players if necessary Amplifier \u00b6 After a long time of informing myself I ordered a refurbished Russound M850MC 8-channel amplifier from America via e-bay. R850MC_connections With its 19-inch format, it fits perfectly into the network cabinet and supplies the entire house in its current configuration. The living room and the kitchen are controlled in parallel via a single Raspberry. Speaker \u00b6 For the loudspeakers (built-in speakers in plaster cardboard) I chose the PHANTOM series of the company Dali. In the living room I installed the IKON in the bathroom ceiling the PHANTOM-E-60 and in the hallway the PHANTOM-H-50. In the kitchen there was little space in the wall and so the wall unit was the perfect place to put the compact box ZENSOR-3 on it. Synology server \u00b6 hosting the Logitech Media Server LMS","title":"multiroom"},{"location":"multiroom/my_multiroom/#the-multiroom-setup","text":"For my multiroom system I used Raspberry PI's, a Russound amplifier and Dali speakers. As \"remote control\" should work every device (PC/Tablet/Smartphone) with a UPNP client/App. In my central solution I have laid all the speaker cables from the different rooms to the network cabinet. With later implementation, a decentralized solution would also be possible. In case of LAN and power supply the Raspberry and the amplifier could disappear in the wall/ceiling next to the speaker. Here you see the network cabinet with tree raspberrys as media-player and the amplifier.","title":"The multiroom setup"},{"location":"multiroom/my_multiroom/#media-player","text":"As in (almost) every modern household, no Raspberry PI should be missing. On the Raspberry there is a digital/analog converter from hifiberry.com plugged in, which feeds its signal into the amplifier. As media player software I use piCorePlayer which is a tiny core linux distribution running entirely in RAM. For remote controll for the Logitech Media Server I use the app squeezer. It supports my Spotify account I can listen from my (local stored at synology NAS) own music collection I can choose from internet radio stations In the app I can select in which zone the music is played And I can manage the playlist and synchronize the players if necessary","title":"Media-player"},{"location":"multiroom/my_multiroom/#amplifier","text":"After a long time of informing myself I ordered a refurbished Russound M850MC 8-channel amplifier from America via e-bay. R850MC_connections With its 19-inch format, it fits perfectly into the network cabinet and supplies the entire house in its current configuration. The living room and the kitchen are controlled in parallel via a single Raspberry.","title":"Amplifier"},{"location":"multiroom/my_multiroom/#speaker","text":"For the loudspeakers (built-in speakers in plaster cardboard) I chose the PHANTOM series of the company Dali. In the living room I installed the IKON in the bathroom ceiling the PHANTOM-E-60 and in the hallway the PHANTOM-H-50. In the kitchen there was little space in the wall and so the wall unit was the perfect place to put the compact box ZENSOR-3 on it.","title":"Speaker"},{"location":"multiroom/my_multiroom/#synology-server","text":"hosting the Logitech Media Server LMS","title":"Synology server"}]}